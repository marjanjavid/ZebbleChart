<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zebble.Plugin.zebbleOxyPlot.Android</name>
    </assembly>
    <members>
        <member name="T:Zebble.AnnotationLayer">
            <summary>
            Specifies the layer for an <see cref="!:Annotation" />.
            </summary>
        </member>
        <member name="F:Zebble.AnnotationLayer.BelowAxes">
            <summary>
            Render the annotation below the gridlines of the axes.
            </summary>
        </member>
        <member name="F:Zebble.AnnotationLayer.BelowSeries">
            <summary>
            Render the annotation below the series.
            </summary>
        </member>
        <member name="F:Zebble.AnnotationLayer.AboveSeries">
            <summary>
            Render the annotation above the series.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.Axis">
            <summary>
            Provides an abstract base class for axes.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.Exponent">
            <summary>
            Exponent function.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.Mantissa">
            <summary>
            Mantissa function.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.ThresholdRound">
            <summary>
            Rounds a value if the difference between the rounded value and the original value is less than 1e-6.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.offset">
            <summary>
            The offset.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.scale">
            <summary>
            The scale.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Axis.position">
            <summary>
            The position of the axis.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.Axis" /> class.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.Axis.AxisChanged">
            <summary>
            Occurs when the axis has been changed (by zooming, panning or resetting).
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.Axis.TransformChanged">
            <summary>
            Occurs when the transform changed (size or axis range was changed).
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AbsoluteMaximum">
            <summary>
            Gets or sets the absolute maximum. This is only used for the UI control. It will not be possible to zoom/pan beyond this limit. The default value is <c>double.MaxValue</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AbsoluteMinimum">
            <summary>
            Gets or sets the absolute minimum. This is only used for the UI control. It will not be possible to zoom/pan beyond this limit. The default value is <c>double.MinValue</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualMajorStep">
            <summary>
            Gets or sets the actual major step.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualMaximum">
            <summary>
            Gets or sets the actual maximum value of the axis.
            </summary>
            <remarks>If <see cref="P:Zebble.zebbleOxyPlot.Axis.ViewMaximum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:Zebble.zebbleOxyPlot.Axis.ViewMaximum" />.
            Otherwise, if <see cref="P:Zebble.zebbleOxyPlot.Axis.Maximum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:Zebble.zebbleOxyPlot.Axis.Maximum" />.
            Otherwise, this value will be defined by the maximum (+padding) of the data.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualMinimum">
            <summary>
            Gets or sets the actual minimum value of the axis.
            </summary>
            <remarks>If <see cref="P:Zebble.zebbleOxyPlot.Axis.ViewMinimum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:Zebble.zebbleOxyPlot.Axis.ViewMinimum" />.
            Otherwise, if <see cref="P:Zebble.zebbleOxyPlot.Axis.Minimum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:Zebble.zebbleOxyPlot.Axis.Minimum" />.
            Otherwise this value will be defined by the minimum (+padding) of the data.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualMinorStep">
            <summary>
            Gets or sets the actual minor step.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualStringFormat">
            <summary>
            Gets or sets the actual string format being used.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualTitle">
            <summary>
            Gets the actual title of the axis.
            </summary>
            <remarks>If the <see cref="P:Zebble.zebbleOxyPlot.Axis.Unit" /> property is set, the <see cref="P:Zebble.zebbleOxyPlot.Axis.TitleFormatString" /> property is used to format the actual title.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Angle">
            <summary>
            Gets or sets the orientation angle (degrees) for the axis labels. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxisTickToLabelDistance">
            <summary>
            Gets or sets the distance from the end of the tick lines to the labels. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxisTitleDistance">
            <summary>
            Gets or sets the minimum distance from the axis labels to the axis title. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxisDistance">
            <summary>
            Gets or sets the distance between the plot area and the axis. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxislineColor">
            <summary>
            Gets or sets the color of the axis line. The default value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Black" />.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxislineStyle">
            <summary>
            Gets or sets the line style of the axis line. The default value is <see cref="F:Zebble.zebbleOxyPlot.LineStyle.None" />.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.AxislineThickness">
            <summary>
            Gets or sets the thickness of the axis line. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ClipTitle">
            <summary>
            Gets or sets a value indicating whether to clip the axis title. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.CropGridlines">
            <summary>
            Gets or sets a value indicating whether to crop gridlines with perpendicular axes Start/EndPositions. The default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.DataMaximum">
            <summary>
            Gets or sets the maximum value of the data displayed on this axis.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.DataMinimum">
            <summary>
            Gets or sets the minimum value of the data displayed on this axis.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.EndPosition">
            <summary>
            Gets or sets the end position of the axis on the plot area. The default value is <c>1</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range from <c>0</c> to <c>1</c>, where <c>0</c> is at the bottom/left
            and <c>1</c> is at the top/right. </remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ExtraGridlineColor">
            <summary>
            Gets or sets the color of the extra gridlines. The default value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Black"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ExtraGridlineStyle">
            <summary>
            Gets or sets the line style of the extra gridlines. The default value is <see cref="F:Zebble.zebbleOxyPlot.LineStyle.Solid"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ExtraGridlineThickness">
            <summary>
            Gets or sets the thickness of the extra gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ExtraGridlines">
            <summary>
            Gets or sets the values for the extra gridlines. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.FilterFunction">
            <summary>
            Gets or sets the filter function. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.FilterMaxValue">
            <summary>
            Gets or sets the maximum value that can be shown using this axis. Values greater or equal to this value will not be shown. The default value is <c>double.MaxValue</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.FilterMinValue">
            <summary>
            Gets or sets the minimum value that can be shown using this axis. Values smaller or equal to this value will not be shown. The default value is <c>double.MinValue</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.IntervalLength">
            <summary>
            Gets or sets the maximum length (screen space) of the intervals. The available length of the axis will be divided by this length to get the approximate number of major intervals on the axis. The default value is <c>60</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.IsAxisVisible">
            <summary>
            Gets or sets a value indicating whether this axis is visible. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.IsReversed">
            <summary>
            Gets a value indicating whether this axis is reversed. It is reversed if <see cref="P:Zebble.zebbleOxyPlot.Axis.StartPosition" /> &gt; <see cref="P:Zebble.zebbleOxyPlot.Axis.EndPosition" />.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Key">
            <summary>
            Gets or sets the key of the axis. This can be used to specify an axis if you have defined multiple axes in a plot. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.LabelFormatter">
            <summary>
            Gets or sets the formatting function for the labels. The default value is <c>null</c>.
            </summary>
            <remarks>This function can be used instead of overriding the <see cref="M:Zebble.zebbleOxyPlot.Axis.FormatValue(System.Double)" /> method.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Layer">
            <summary>
            Gets or sets the layer of the axis. The default value is <see cref="F:Zebble.zebbleOxyPlot.AxisLayer.BelowSeries"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MajorGridlineColor">
            <summary>
            Gets or sets the color of the major gridlines. The default value is <c>#40000000</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MajorGridlineStyle">
            <summary>
            Gets or sets the line style of the major gridlines. The default value is <see cref="F:Zebble.zebbleOxyPlot.LineStyle.None"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MajorGridlineThickness">
            <summary>
            Gets or sets the thickness of the major gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MajorStep">
            <summary>
            Gets or sets the interval between major ticks. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MajorTickSize">
            <summary>
            Gets or sets the size of the major ticks. The default value is <c>7</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Maximum">
            <summary>
            Gets or sets the maximum value of the axis. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MaximumPadding">
            <summary>
            Gets or sets the 'padding' fraction of the maximum value. The default value is <c>0.01</c>.
            </summary>
            <remarks> A value of 0.01 gives 1% more space on the maximum end of the axis. This property is not used if the <see cref="P:Zebble.zebbleOxyPlot.Axis.Maximum" /> property is set.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MaximumRange">
            <summary>
            Gets or sets the maximum range of the axis. Setting this property ensures that <c>ActualMaximum-ActualMinimum &lt; MaximumRange</c>. The default value is <c>double.PositiveInfinity</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Minimum">
            <summary>
            Gets or sets the minimum value of the axis. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinimumMajorStep">
            <summary>
            Gets or sets the minimum value for the interval between major ticks. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinimumMinorStep">
            <summary>
            Gets or sets the minimum value for the interval between minor ticks. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinimumPadding">
            <summary>
            Gets or sets the 'padding' fraction of the minimum value. The default value is <c>0.01</c>.
            </summary>
            <remarks>A value of 0.01 gives 1% more space on the minimum end of the axis. This property is not used if the <see cref="P:Zebble.zebbleOxyPlot.Axis.Minimum" /> property is set.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinimumRange">
            <summary>
            Gets or sets the minimum range of the axis. Setting this property ensures that <c>ActualMaximum-ActualMinimum > MinimumRange</c>. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorGridlineColor">
            <summary>
            Gets or sets the color of the minor gridlines. The default value is <c>#20000000</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorGridlineStyle">
            <summary>
            Gets or sets the line style of the minor gridlines. The default value is <see cref="F:Zebble.zebbleOxyPlot.LineStyle.None"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorGridlineThickness">
            <summary>
            Gets or sets the thickness of the minor gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorStep">
            <summary>
            Gets or sets the interval between minor ticks. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorTicklineColor">
            <summary>
            Gets or sets the color of the minor ticks. The default value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Automatic"/>.
            </summary>
            <remarks>If the value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Automatic"/>, the value of
            <see cref="P:Zebble.zebbleOxyPlot.Axis.TicklineColor"/> will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.MinorTickSize">
            <summary>
            Gets or sets the size of the minor ticks. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Offset">
            <summary>
            Gets the offset. This is used to transform between data and screen coordinates.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Position">
            <summary>
            Gets or sets the position of the axis. The default value is <see cref="F:Zebble.zebbleOxyPlot.AxisPosition.Left"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.PositionAtZeroCrossing">
            <summary>
            Gets or sets a value indicating whether the axis should be positioned at the zero-crossing of the related axis. The default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.PositionTier">
            <summary>
            Gets or sets the position tier which defines in which tier the axis is displayed. The default value is <c>0</c>.
            </summary>
            <remarks>The bigger the value the further afar is the axis from the graph.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Scale">
            <summary>
            Gets the scaling factor of the axis. This is used to transform between data and screen coordinates.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ScreenMax">
            <summary>
            Gets or sets the screen coordinate of the maximum end of the axis.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ScreenMin">
            <summary>
            Gets or sets the screen coordinate of the minimum end of the axis.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.StartPosition">
            <summary>
            Gets or sets the start position of the axis on the plot area. The default value is <c>0</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range from <c>0</c> to <c>1</c>, where <c>0</c> is at the bottom/left
            and <c>1</c> is at the top/right. </remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.StringFormat">
            <summary>
            Gets or sets the string format used for formatting the axis values. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TickStyle">
            <summary>
            Gets or sets the tick style for major and minor ticks. The default value is <see cref="F:OxyPlot.Axes.TickStyle.Outside"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TicklineColor">
            <summary>
            Gets or sets the color of the major and minor ticks. The default value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Black"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Title">
            <summary>
            Gets or sets the title of the axis. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleClippingLength">
            <summary>
            Gets or sets the length of the title clipping rectangle (fraction of the available length of the axis). The default value is <c>0.9</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleColor">
            <summary>
            Gets or sets the color of the title. The default value is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Automatic"/>.
            </summary>
            <remarks>If the value is <c>null</c>, the <see cref="P:Zebble.zebbleOxyPlot.PlotModel.TextColor" /> will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleFont">
            <summary>
            Gets or sets the title font. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleFontSize">
            <summary>
            Gets or sets the size of the title font. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleFontWeight">
            <summary>
            Gets or sets the weight of the title font. The default value is <see cref="F:Zebble.zebbleOxyPlot.FontWeights.Normal"/>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitleFormatString">
            <summary>
            Gets or sets the format string used for formatting the title and unit when <see cref="P:Zebble.zebbleOxyPlot.Axis.Unit" /> is defined. 
            The default value is "{0} [{1}]", where {0} refers to the <see cref="P:Zebble.zebbleOxyPlot.Axis.Title" /> and {1} refers to the <see cref="P:Zebble.zebbleOxyPlot.Axis.Unit" />.
            </summary>
            <remarks>If <see cref="P:Zebble.zebbleOxyPlot.Axis.Unit" /> is <c>null</c>, the actual title is defined by <see cref="P:Zebble.zebbleOxyPlot.Axis.Title" /> only.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.TitlePosition">
            <summary>
            Gets or sets the position of the title. The default value is <c>0.5</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range <c>0</c> to <c>1</c>.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.Unit">
            <summary>
            Gets or sets the unit of the axis. The default value is <c>null</c>.
            </summary>
            <remarks>The <see cref="P:Zebble.zebbleOxyPlot.Axis.TitleFormatString" /> is used to format the title including this unit.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.UseSuperExponentialFormat">
            <summary>
            Gets or sets a value indicating whether to use superscript exponential format. The default value is <c>false</c>.
            </summary>
            <remarks>
            This format will convert 1.5E+03 to 1.5·10^{3} and render the superscript properly.
            If <see cref="P:Zebble.zebbleOxyPlot.Axis.StringFormat" /> is <c>null</c>, 1.0E+03 will be converted to 10^{3}, otherwise it will use the format string for the mantissa.
            </remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.DesiredSize">
            <summary>
            Gets or sets the "desired" size by the renderer such that the axis text &amp; ticks will not be clipped.  This
            size is distinct from the margin settings or the size which is actually rendered, as in: ActualWidth / ActualSize.  
            Actual rendered size may be smaller or larger than the desired size if the margins are set manually.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.PositionTierMaxShift">
            <summary>
            Gets or sets the position tier max shift.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.PositionTierMinShift">
            <summary>
            Gets or sets the position tier min shift.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.PositionTierSize">
            <summary>
            Gets or sets the size of the position tier.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualTitleColor">
            <summary>
            Gets the actual color of the title.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualTitleFont">
            <summary>
            Gets the actual title font.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualTitleFontSize">
            <summary>
            Gets the actual size of the title font.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ActualTitleFontWeight">
            <summary>
            Gets the actual title font weight.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ViewMaximum">
            <summary>
            Gets or sets the current view's maximum. This value is used when the user zooms or pans.
            </summary>
            <value>The view maximum.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Axis.ViewMinimum">
            <summary>
            Gets or sets the current view's minimum. This value is used when the user zooms or pans.
            </summary>
            <value>The view minimum.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ToDouble(System.Object)">
            <summary>
            Converts the value of the specified object to a double precision floating point number. DateTime objects are converted using DateTimeAxis.ToDouble and TimeSpan objects are converted using TimeSpanAxis.ToDouble
            </summary>
            <param name="value">The value.</param>
            <returns>The floating point number value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.InverseTransform(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.Axis,Zebble.zebbleOxyPlot.Axis)">
            <summary>
            Transforms the specified point from screen space to data space.
            </summary>
            <param name="p">The point.</param>
            <param name="xaxis">The x axis.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.FormatValue(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the coordinates used to draw ticks and tick labels (numbers or category names).
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from a coordinate <see cref="T:System.Double" /> value to the actual data type.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The converted value.</returns>
            <remarks>Examples: The <see cref="T:Zebble.zebbleOxyPlot.DateTimeAxis" /> returns the <see cref="T:System.DateTime" /> and <see cref="!:CategoryAxis" /> returns category strings.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.InverseTransform(System.Double,System.Double,Zebble.zebbleOxyPlot.Axis)">
            <summary>
            Inverse transform the specified screen point.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="yaxis">The y-axis.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.InverseTransform(System.Double)">
            <summary>
            Inverse transforms the specified screen coordinate. This method can only be used with non-polar coordinate systems.
            </summary>
            <param name="sx">The screen coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.IsHorizontal">
            <summary>
            Determines whether the axis is horizontal.
            </summary>
            <returns><c>true</c> if the axis is horizontal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.IsValidValue(System.Double)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if the specified value is valid; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.IsVertical">
            <summary>
            Determines whether the axis is vertical.
            </summary>
            <returns><c>true</c> if the axis is vertical; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.IsLogarithmic">
            <summary>
            Determines whether the axis is logarithmic.
            </summary>
            <returns><c>true</c> if it is a logarithmic axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Measure(Zebble.zebbleOxyPlot.IRenderContext)">
            <summary>
            Measures the size of the axis (maximum axis label width/height).
            </summary>
            <param name="rc">The render context.</param>
            <returns>The size of the axis.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Pan(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="ppt">The previous point (screen coordinates).</param>
            <param name="cpt">The current point (screen coordinates).</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Pan(System.Double)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Render(Zebble.zebbleOxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Reset">
            <summary>
            Resets the user's modification (zooming/panning) to minimum and maximum of this axis.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Transform(System.Double,System.Double,Zebble.zebbleOxyPlot.Axis)">
            <summary>
            Transforms the specified point to screen coordinates.
            </summary>
            <param name="x">The x value (for the current axis).</param>
            <param name="y">The y value.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Transform(System.Double)">
            <summary>
            Transforms the specified coordinate to screen coordinates. This method can only be used with non-polar coordinate systems.
            </summary>
            <param name="x">The value.</param>
            <returns>The transformed value (screen coordinate).</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Zoom(System.Double)">
            <summary>
            Zoom to the specified scale.
            </summary>
            <param name="newScale">The new scale.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Zoom(System.Double,System.Double)">
            <summary>
            Zooms the axis to the range [x0,x1].
            </summary>
            <param name="x0">The new minimum.</param>
            <param name="x1">The new maximum.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ZoomAt(System.Double,System.Double)">
            <summary>
            Zooms the axis at the specified coordinate.
            </summary>
            <param name="factor">The zoom factor.</param>
            <param name="x">The coordinate to zoom at.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ZoomAtCenter(System.Double)">
            <summary>
            Zooms the axis with the specified zoom factor at the center of the axis.
            </summary>
            <param name="factor">The zoom factor.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.Include(System.Double)">
            <summary>
            Modifies the data range of the axis [DataMinimum,DataMaximum] to includes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ResetDataMaxMin">
            <summary>
            Resets the <see cref="P:Zebble.zebbleOxyPlot.Axis.DataMaximum" /> and <see cref="P:Zebble.zebbleOxyPlot.Axis.DataMinimum" /> values.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.UpdateActualMaxMin">
            <summary>
            Updates the <see cref="P:Zebble.zebbleOxyPlot.Axis.ActualMaximum" /> and <see cref="P:Zebble.zebbleOxyPlot.Axis.ActualMinimum" /> values.
            </summary>
            <remarks>If the user has zoomed/panned the axis, the internal ViewMaximum/ViewMinimum
            values will be used. If Maximum or Minimum have been set, these values will be used. Otherwise the maximum and minimum values
            of the series will be used, including the 'padding'.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.UpdateIntervals(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Updates the actual minor and major step intervals.
            </summary>
            <param name="plotArea">The plot area rectangle.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.UpdateTransform(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Updates the scale and offset properties of the transform from the specified boundary rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.ResetCurrentValues">
            <summary>
            Resets the current values.
            </summary>
            <remarks>The current values may be modified during update of max/min and rendering.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.GetDefaultStringFormat">
            <summary>
            Gets the default format string.
            </summary>
            <returns>A format string.</returns>
            <remarks>This format string is used if the StringFormat is not set.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.PostInverseTransform(System.Double)">
            <summary>
            Applies a transformation after the inverse transform of the value.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
            <remarks>If this method is overridden, the <see cref="M:Zebble.zebbleOxyPlot.Axis.InverseTransform(System.Double)" /> method must also be overridden.
            See <see cref="!:LogarithmicAxis" /> for examples on how to implement this.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.PreTransform(System.Double)">
            <summary>
            Applies a transformation before the transform the value.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
            <remarks>If this method is overridden, the <see cref="M:Zebble.zebbleOxyPlot.Axis.Transform(System.Double)" /> method must also be overridden.
            See <see cref="!:LogarithmicAxis" /> for examples on how to implement this.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CalculateMinorInterval(System.Double)">
            <summary>
            Calculates the minor interval.
            </summary>
            <param name="majorInterval">The major interval.</param>
            <returns>The minor interval.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CreateTickValues(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Creates tick values at the specified interval.
            </summary>
            <param name="from">The start value.</param>
            <param name="to">The end value.</param>
            <param name="step">The interval.</param>
            <param name="maxTicks">The maximum number of ticks (optional). The default value is 1000.</param>
            <returns>A sequence of values.</returns>
            <exception cref="T:System.ArgumentException">Step cannot be zero or negative.;step</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CoerceActualMaxMin">
            <summary>
            Coerces the actual maximum and minimum values.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CalculateActualMaximum">
            <summary>
            Calculates the actual maximum value of the axis, including the <see cref="P:Zebble.zebbleOxyPlot.Axis.MaximumPadding" />.
            </summary>
            <returns>The new actual maximum value of the axis.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CalculateActualMinimum">
            <summary>
            Calculates the actual minimum value of the axis, including the <see cref="P:Zebble.zebbleOxyPlot.Axis.MinimumPadding" />.
            </summary>
            <returns>The new actual minimum value of the axis.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.SetTransform(System.Double,System.Double)">
            <summary>
            Sets the transform.
            </summary>
            <param name="newScale">The new scale.</param>
            <param name="newOffset">The new offset.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.CalculateActualInterval(System.Double,System.Double,System.Double)">
            <summary>
            Returns the actual interval to use to determine which values are displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <param name="maxIntervalSize">The maximum interval size.</param>
            <param name="range">The range.</param>
            <returns>Actual interval to use to determine which values are displayed in the axis.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.OnAxisChanged(Zebble.zebbleOxyPlot.AxisChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.Axis.AxisChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:OxyPlot.Axes.AxisChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Axis.OnTransformChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.Axis.TransformChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisChangedEventArgs">
            <summary>
            Provides additional data for the <see cref="E:Zebble.zebbleOxyPlot.Axis.AxisChanged" /> event.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisChangedEventArgs.#ctor(Zebble.zebbleOxyPlot.AxisChangeTypes,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.AxisChangedEventArgs" /> class.
            </summary>
            <param name="changeType">Type of the change.</param>
            <param name="deltaMinimum">The delta minimum.</param>
            <param name="deltaMaximum">The delta maximum.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisChangedEventArgs.ChangeType">
            <summary>
            Gets the type of the change.
            </summary>
            <value>The type of the change.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisChangedEventArgs.DeltaMinimum">
            <summary>
            Gets the delta for the minimum.
            </summary>
            <value>The delta.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisChangedEventArgs.DeltaMaximum">
            <summary>
            Gets the delta for the maximum.
            </summary>
            <value>The delta.</value>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisChangeTypes">
            <summary>
            Defines change types for the <see cref="E:Zebble.zebbleOxyPlot.Axis.AxisChanged" /> event.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisChangeTypes.Zoom">
            <summary>
            The axis was zoomed by the user.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisChangeTypes.Pan">
            <summary>
            The axis was panned by the user.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisChangeTypes.Reset">
            <summary>
            The axis zoom/pan was reset by the user.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisLayer">
            <summary>
            Specifies the layer of an <see cref="T:Zebble.zebbleOxyPlot.Axis" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisLayer.BelowSeries">
            <summary>
            Below all series.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisLayer.AboveSeries">
            <summary>
            Above all series.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisPosition">
            <summary>
            Specifies the position of an <see cref="T:Zebble.zebbleOxyPlot.Axis" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisPosition.None">
            <summary>
            No position.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisPosition.Left">
            <summary>
            Left of the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisPosition.Right">
            <summary>
            Right of the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisPosition.Top">
            <summary>
            Top of the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisPosition.Bottom">
            <summary>
            Bottom of the plot area.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisUtilities">
            <summary>
            Static utility methods for the <see cref="T:Zebble.zebbleOxyPlot.Axis" /> classes.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisUtilities.CalculateMinorInterval(System.Double)">
            <summary>
            Calculates the minor interval.
            </summary>
            <param name="majorInterval">The major interval.</param>
            <returns>The minor interval.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisUtilities.CalculateMinorInterval2(System.Double)">
            <summary>
            Calculates the minor interval (alternative algorithm).
            </summary>
            <param name="majorInterval">The major interval.</param>
            <returns>The minor interval.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisUtilities.CreateTickValues(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Creates tick values at the specified interval.
            </summary>
            <param name="from">The start value.</param>
            <param name="to">The end value.</param>
            <param name="step">The interval.</param>
            <param name="maxTicks">The maximum number of ticks (optional). The default value is 1000.</param>
            <returns>A sequence of values.</returns>
            <exception cref="T:System.ArgumentException">Step cannot be zero or negative.;step</exception>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.DateTimeAxis">
            <summary>
            Represents an axis presenting <see cref="T:System.DateTime" /> values.
            </summary>
            <remarks>The actual numeric values on the axis are days since 1900/01/01.
            Use the static ToDouble and ToDateTime to convert numeric values to and from DateTimes.
            The StringFormat value can be used to force formatting of the axis values
            <code>"yyyy-MM-dd"</code> shows date
            <code>"w"</code> or <code>"ww"</code> shows week number
            <code>"h:mm"</code> shows hours and minutes</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeAxis.TimeOrigin">
            <summary>
            The time origin.
            </summary>
            <remarks>This gives the same numeric date values as Excel</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeAxis.MaxDayValue">
            <summary>
            The maximum day value
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeAxis.MinDayValue">
            <summary>
            The minimum day value
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeAxis.actualIntervalType">
            <summary>
            The actual interval type.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeAxis.actualMinorIntervalType">
            <summary>
            The actual minor interval type.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:Zebble.zebbleOxyPlot.DateTimeAxis" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DateTimeAxis.CalendarWeekRule">
            <summary>
            Gets or sets CalendarWeekRule.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DateTimeAxis.FirstDayOfWeek">
            <summary>
            Gets or sets FirstDayOfWeek.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets IntervalType.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DateTimeAxis.MinorIntervalType">
            <summary>
            Gets or sets MinorIntervalType.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DateTimeAxis.TimeZone">
            <summary>
            Gets or sets the time zone (used when formatting date/time values).
            </summary>
            <value>The time zone info.</value>
            <remarks>No date/time conversion will be performed if this property is <c>null</c>.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CreateDataPoint(System.DateTime,System.Double)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CreateDataPoint(System.DateTime,System.DateTime)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CreateDataPoint(System.Double,System.DateTime)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.ToDateTime(System.Double)">
            <summary>
            Converts a numeric representation of the date (number of days after the time origin) to a DateTime structure.
            </summary>
            <param name="value">The number of days after the time origin.</param>
            <returns>A <see cref="T:System.DateTime" /> structure. Ticks = 0 if the value is invalid.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.ToDouble(System.DateTime)">
            <summary>
            Converts a DateTime to days after the time origin.
            </summary>
            <param name="value">The date/time structure.</param>
            <returns>The number of days after the time origin.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the tick values.
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from double to the correct data type if necessary.
            e.g. DateTimeAxis returns the DateTime and CategoryAxis returns category strings.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.UpdateIntervals(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Updates the intervals.
            </summary>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.GetDefaultStringFormat">
            <summary>
            Gets the default string format.
            </summary>
            <returns>
            The format string.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CreateDateTickValues(System.Double,System.Double,System.Double,Zebble.zebbleOxyPlot.DateTimeIntervalType)">
            <summary>
            Creates the date tick values.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <param name="step">The step.</param>
            <param name="intervalType">Type of the interval.</param>
            <returns>Date tick values.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.CreateDateTimeTickValues(System.Double,System.Double,System.Double,Zebble.zebbleOxyPlot.DateTimeIntervalType)">
            <summary>
            Creates <see cref="T:System.DateTime" /> tick values.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <param name="interval">The interval.</param>
            <param name="intervalType">The interval type.</param>
            <returns>A list of <see cref="T:System.DateTime" /> tick values.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DateTimeAxis.GetWeek(System.DateTime)">
            <summary>
            Gets the week number for the specified date.
            </summary>
            <param name="date">The date.</param>
            <returns>The week number for the current culture.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.DateTimeIntervalType">
            <summary>
            Specifies the interval for a <see cref="T:Zebble.zebbleOxyPlot.DateTimeAxis" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Manual">
            <summary>
            Manual definition of intervals.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Weeks">
            <summary>
            Interval type is weeks.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LinearAxis">
            <summary>
            Represents an axis with linear scale.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.LinearAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.LinearAxis" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.LinearAxis.FormatAsFractions">
            <summary>
            Gets or sets a value indicating whether to format numbers as fractions.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.LinearAxis.FractionUnit">
            <summary>
            Gets or sets the fraction unit. Remember to set FormatAsFractions to <c>true</c>.
            </summary>
            <value>The fraction unit.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.LinearAxis.FractionUnitSymbol">
            <summary>
            Gets or sets the fraction unit symbol. Use FractionUnit = Math.PI and FractionUnitSymbol = "π" if you want the axis to show "π/2,π,3π/2,2π" etc. Use FractionUnit = 1 and FractionUnitSymbol = "L" if you want the axis to show "0,L/2,L" etc. Remember to set FormatAsFractions to <c>true</c>.
            </summary>
            <value>The fraction unit symbol.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.LinearAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.LinearAxis.IsLogarithmic">
            <summary>
            Determines whether the axis is logarithmic.
            </summary>
            <returns><c>true</c> if it is a logarithmic axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.LinearAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.AxisRendererBase">
            <summary>
            Provides an abstract base class for axis renderers.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisRendererBase.plot">
            <summary>
            The plot.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisRendererBase.rc">
            <summary>
            The render context.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisRendererBase.majorLabelValues">
            <summary>
            The major label values
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisRendererBase.majorTickValues">
            <summary>
            The major tick values
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.AxisRendererBase.minorTickValues">
            <summary>
            The minor tick values
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisRendererBase.#ctor(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.AxisRendererBase" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.Plot">
            <summary>
            Gets the plot.
            </summary>
            <value>The plot.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.RenderContext">
            <summary>
            Gets the render context.
            </summary>
            <value>The render context.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.AxislinePen">
            <summary>
            Gets or sets the axis lines pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.ExtraPen">
            <summary>
            Gets or sets the extra grid lines pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MajorLabelValues">
            <summary>
            Gets or sets the major label values.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MajorPen">
            <summary>
            Gets or sets the major grid lines pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MajorTickPen">
            <summary>
            Gets or sets the major tick pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MajorTickValues">
            <summary>
            Gets or sets the major tick values.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MinorPen">
            <summary>
            Gets or sets the minor grid lines pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MinorTickPen">
            <summary>
            Gets or sets the minor tick pen.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.MinorTickValues">
            <summary>
            Gets or sets the minor tick values.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.AxisRendererBase.ZeroPen">
            <summary>
            Gets or sets the zero grid line pen.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisRendererBase.Render(Zebble.zebbleOxyPlot.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisRendererBase.CreatePens(Zebble.zebbleOxyPlot.Axis)">
            <summary>
            Creates the pens.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisRendererBase.GetTickPositions(Zebble.zebbleOxyPlot.Axis,Zebble.zebbleOxyPlot.TickStyle,System.Double,Zebble.zebbleOxyPlot.AxisPosition,System.Double@,System.Double@)">
            <summary>
            Gets the tick positions.
            </summary>
            <param name="axis">The axis.</param>
            <param name="tickStyle">The tick style.</param>
            <param name="tickSize">The tick size.</param>
            <param name="position">The position.</param>
            <param name="x0">The x 0.</param>
            <param name="x1">The x 1.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.AxisRendererBase.IsWithin(System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the specified value is within the specified range.
            </summary>
            <param name="dd">The value to check.</param>
            <param name="min">The minimum value of the range.</param>
            <param name="max">The maximum value of the range.</param>
            <returns><c>true</c> if the specified value is within the range; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer">
            <summary>
            Provides functionality to render horizontal and vertical axes.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.#ctor(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.Render(Zebble.zebbleOxyPlot.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.Lerp(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates linearly between two values.
            </summary>
            <param name="x0">The x0.</param>
            <param name="x1">The x1.</param>
            <param name="f">The interpolation factor.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.SnapTo(System.Double,System.Double@,System.Double)">
            <summary>
            Snaps v to value if it is within the specified distance.
            </summary>
            <param name="target">The target value.</param>
            <param name="v">The value to snap.</param>
            <param name="eps">The distance tolerance.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.GetAxisTitlePositionAndAlignment(Zebble.zebbleOxyPlot.Axis,System.Double,System.Double@,Zebble.HorizontalAlignment@,Zebble.VerticalAlignment@)">
            <summary>
            Gets the axis title position, rotation and alignment.
            </summary>
            <param name="axis">The axis.</param>
            <param name="titlePosition">The title position.</param>
            <param name="angle">The angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.RenderAxisTitle(Zebble.zebbleOxyPlot.Axis,System.Double)">
            <summary>
            Renders the axis title.
            </summary>
            <param name="axis">The axis.</param>
            <param name="titlePosition">The title position.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.RenderMajorItems(Zebble.zebbleOxyPlot.Axis,System.Double,System.Double,System.Boolean)">
            <summary>
            Renders the major items.
            </summary>
            <param name="axis">The axis.</param>
            <param name="axisPosition">The axis position.</param>
            <param name="titlePosition">The title position.</param>
            <param name="drawAxisLine">Draw the axis line if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.RenderMinorItems(Zebble.zebbleOxyPlot.Axis,System.Double)">
            <summary>
            Renders the minor items.
            </summary>
            <param name="axis">The axis.</param>
            <param name="axisPosition">The axis position.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.AddSegments(System.Collections.Generic.List{Zebble.zebbleOxyPlot.ScreenPoint},System.Collections.Generic.List{Zebble.zebbleOxyPlot.Axis},System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds segments to <paramref name="segments"/> array. 
            If <paramref name="cropGridlines"/> is true, then lines will be cropped with <paramref name="perpAxes"/> lists axes.
            </summary>
            <param name="segments">The target segments.</param>
            <param name="perpAxes">Perpendicular axes list.</param>
            <param name="isHorizontal">True, if current axis is horizontal.</param>
            <param name="cropGridlines">True, if gridlines should be cropped.</param>
            <param name="transformedValue">Starting point position.</param>
            <param name="plotAreaLeft">Plot area left position.</param>
            <param name="plotAreaRight">Plot area right position.</param>
            <param name="plotAreaTop">Plot area top position.</param>
            <param name="plotAreaBottom">Plot area bottom position.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HorizontalAndVerticalAxisRenderer.GetRotatedAlignments(System.Double,System.Double,Zebble.HorizontalAlignment@,Zebble.VerticalAlignment@)">
            <summary>
            Gets the alignments given the specified rotation angle.
            </summary>
            <param name="boxAngle">The angle of a box to rotate (usually it is label angle).</param>
            <param name="axisAngle">
            The axis angle, the original angle belongs to. The Top axis should have 0, next angles are computed clockwise. 
            The angle should be in [-180, 180). (T, R, B, L) is (0, 90, -180, -90). 
            </param>
            <param name="ha">Horizontal alignment.</param>
            <param name="va">Vertical alignment.</param>
            <remarks>
            This method is supposed to compute the alignment of the labels that are put near axis. 
            Because such labels can have different angles, and the axis can have different angles as well,
            computing the alignment is not straightforward.
            </remarks>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.TickStyle">
            <summary>
            Defines the style of axis ticks.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TickStyle.Crossing">
            <summary>
            The ticks are rendered crossing the axis line.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TickStyle.Inside">
            <summary>
            The ticks are rendered inside of the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TickStyle.Outside">
            <summary>
            The ticks are rendered Outside the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TickStyle.None">
            <summary>
            The ticks are not rendered.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.TimeSpanAxis">
            <summary>
            Represents an axis presenting <see cref="T:System.TimeSpan" /> values.
            </summary>
            <remarks>The values should be in seconds.
            The StringFormat value can be used to force formatting of the axis values
            <code>"h:mm"</code> shows hours and minutes
            <code>"m:ss"</code> shows minutes and seconds</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.ToDouble(System.TimeSpan)">
            <summary>
            Converts a time span to a double.
            </summary>
            <param name="s">The time span.</param>
            <returns>A double value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.ToTimeSpan(System.Double)">
            <summary>
            Converts a double to a time span.
            </summary>
            <param name="value">The value.</param>
            <returns>A time span.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from double to the correct data type if necessary. e.g. DateTimeAxis returns the DateTime and CategoryAxis returns category strings.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.GetDefaultStringFormat">
            <summary>
            Gets the default format string.
            </summary>
            <returns>
            The default format string.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.TimeSpanAxis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.CodeGenerationAttribute">
            <summary>
            Specifies whether code should be generated for the property.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerationAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.CodeGenerationAttribute" /> class.
            </summary>
            <param name="generateCode">The generate code.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.CodeGenerationAttribute.GenerateCode">
            <summary>
            Gets or sets a value indicating whether GenerateCode.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.CodeGenerator">
            <summary>
            Provides functionality to generate C# code for the specified <see cref="T:Zebble.zebbleOxyPlot.PlotModel" />.
            </summary>
            <remarks>This is useful for creating examples or unit tests. Press Ctrl+Alt+C in a plot to copy code to the clipboard.
            Usage:
            <code>
            var cg = new CodeGenerator(myPlotModel);
            Clipboard.SetText(cg.ToCode());
            </code></remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CodeGenerator.sb">
            <summary>
            The string builder.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CodeGenerator.variables">
            <summary>
            The variables.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CodeGenerator.indentString">
            <summary>
            The indent string.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CodeGenerator.indents">
            <summary>
            The current number of indents.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.#ctor(Zebble.zebbleOxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.CodeGenerator" /> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.CodeGenerator.Indents">
            <summary>
            Gets or sets the number of indents.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.FormatCode(System.String,System.Object[])">
            <summary>
            Formats the code.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <returns>The format code.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.FormatConstructor(System.Type,System.String,System.Object[])">
            <summary>
            Formats a constructor.
            </summary>
            <param name="type">The type.</param>
            <param name="format">The format of the constructor arguments.</param>
            <param name="values">The argument values.</param>
            <returns>The format constructor.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.ToCode">
            <summary>
            Returns the c# code for this model.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.Add(System.Object)">
            <summary>
            Adds the specified object to the generated code.
            </summary>
            <param name="obj">The object.</param>
            <returns>The variable name.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.AddChildren(System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            Adds the children.
            </summary>
            <param name="name">The name.</param>
            <param name="collectionName">Name of the collection.</param>
            <param name="children">The children.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.AddItems(System.String,System.Collections.IList)">
            <summary>
            Adds the items.
            </summary>
            <param name="name">The name.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.AddArray(System.String,System.Array)">
            <summary>
            Creates and sets the elements of an array.
            </summary>
            <param name="name">The name.</param>
            <param name="array">The array.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.AppendLine(System.String,System.Object[])">
            <summary>
            Appends the line.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.AreListsEqual(System.Collections.IList,System.Collections.IList)">
            <summary>
            Determines if the two specified lists are equal.
            </summary>
            <param name="list1">The first list.</param>
            <param name="list2">The second list.</param>
            <returns>True if all items are equal.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.GetFirstAttribute``1(System.Reflection.PropertyInfo)">
            <summary>
            Get the first attribute of the specified type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="pi">The property info.</param>
            <returns>The attribute, or <c>null</c> if no attribute was found.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.GetNewVariableName(System.Type)">
            <summary>
            Gets a new variable name of the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The variable name.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.MakeValidVariableName(System.String)">
            <summary>
            Makes a valid variable name of a string. Invalid characters will simply be removed.
            </summary>
            <param name="title">The title.</param>
            <returns>A valid variable name.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.SetProperties(System.Object,System.String,System.Object)">
            <summary>
            The set properties.
            </summary>
            <param name="instance">The instance.</param>
            <param name="varName">The variable name.</param>
            <param name="defaultValues">The default values.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CodeGenerator.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ICodeGenerating">
            <summary>
            Provides functionality to generate C# code of an object.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ICodeGenerating.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The C# code.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.DataPoint">
            <summary>
            Represents a point in the data space.
            </summary>
            <remarks><see cref="T:Zebble.zebbleOxyPlot.DataPoint" />s are transformed to <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />s.</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DataPoint.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DataPoint.xx">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.DataPoint.yy">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.DataPoint" /> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DataPoint.X">
            <summary>
            Gets the X-coordinate of the point.
            </summary>
            <value>The X-coordinate.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.DataPoint.Y">
            <summary>
            Gets the Y-coordinate of the point.
            </summary>
            <value>The Y-coordinate.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DataPoint.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DataPoint.Equals(Zebble.zebbleOxyPlot.DataPoint)">
            <summary>
            Determines whether this instance and another specified <see cref="T:DataPoint" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DataPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.DataPoint.IsDefined">
            <summary>
            Determines whether this point is defined.
            </summary>
            <returns><c>true</c> if this point is defined; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.MarkerType">
            <summary>
            Defines the marker type.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.None">
            <summary>
            Do not render markers.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Circle">
            <summary>
            Render markers as circles.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Square">
            <summary>
            Render markers as squares.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Diamond">
            <summary>
            Render markers as diamonds.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Triangle">
            <summary>
            Render markers as triangles.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Cross">
            <summary>
            Render markers as crosses (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Plus">
            <summary>
            Renders markers as plus signs (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Star">
            <summary>
            Renders markers as stars (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.MarkerType.Custom">
            <summary>
            Render markers by a custom shape (defined by outline).
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Element.Parent">
            <summary>
            Gets the parent model of the element.
            </summary>
            <value>
            The <see cref="T:Zebble.zebbleOxyPlot.Model" /> that is the parent of the element.
            </value>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ElementCollectionChangedEventArgs`1">
            <summary>
            The element collection changed event args.
            </summary>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollectionChangedEventArgs`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.ElementCollectionChangedEventArgs`1"/> class.
            </summary>
            <param name="addedItems">The added items.</param>
            <param name="removedItems">The removed items.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ElementCollectionChangedEventArgs`1.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ElementCollectionChangedEventArgs`1.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ElementCollection`1.parent">
            <summary>
            The parent <see cref="T:Zebble.zebbleOxyPlot.Model" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ElementCollection`1.internalList">
            <summary>
            The internal list.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.#ctor(Zebble.zebbleOxyPlot.Model)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.ElementCollection`1" /> class.
            </summary>
            <param name="parent">The parent <see cref="T:Zebble.zebbleOxyPlot.PlotModel" />.</param>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.ElementCollection`1.CollectionChanged">
            <summary>
            Raised when the collection changes.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ElementCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ElementCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <returns><c>true</c> if the collection is read-only; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ElementCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator{T}" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
            <exception cref="T:System.InvalidOperationException">The element cannot be added, it already belongs to a PlotModel.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><c>true</c> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><c>true</c> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <c>false</c>. This method also returns <c>false</c> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <exception cref="T:System.InvalidOperationException">The element cannot be inserted, it already belongs to a PlotModel.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the collection item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ElementCollection`1.RaiseCollectionChanged(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Raises the collection changed event.
            </summary>
            <param name="addedItems">The added items.</param>
            <param name="removedItems">The removed items.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.HitTestArguments">
            <summary>
            Represents arguments for the hit test.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HitTestArguments.#ctor(Zebble.zebbleOxyPlot.ScreenPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.HitTestArguments"/> class.
            </summary>
            <param name="point">The point.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestArguments.Point">
            <summary>
            Gets the point to hit test.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestArguments.Tolerance">
            <summary>
            Gets the hit test tolerance.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.HitTestResult">
            <summary>
            Represents a hit test result.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HitTestResult.#ctor(Zebble.zebbleOxyPlot.UIElement,Zebble.zebbleOxyPlot.ScreenPoint,System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.HitTestResult" /> class.
            </summary>
            <param name="element">The element that was hit.</param>
            <param name="nearestHitPoint">The nearest hit point.</param>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestResult.Index">
            <summary>
            Gets the index of the hit (if available).
            </summary>
            <value>The index.</value>
            <remarks>If the hit was in the middle between point 1 and 2, index = 1.5.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestResult.Item">
            <summary>
            Gets the item of the hit (if available).
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestResult.Element">
            <summary>
            Gets the element that was hit.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.HitTestResult.NearestHitPoint">
            <summary>
            Gets the position of the nearest hit point.
            </summary>
            <value>The nearest hit point.</value>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Model.DefaultSelectionColor">
            <summary>
            The default selection color.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Model.syncRoot">
            <summary>
            The synchronization root object.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Model.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.Model"/> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Model.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Zebble.zebbleOxyPlot.Model" />.
            </summary>
            <value>A synchronization object.</value>
            <remarks>This property can be used when modifying the <see cref="T:Zebble.zebbleOxyPlot.Model" /> on a separate thread (not the thread updating or rendering the model).</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Model.SelectionColor">
            <summary>
            Gets or sets the color of the selection.
            </summary>
            <value>The color of the selection.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Model.HitTest(Zebble.zebbleOxyPlot.HitTestArguments)">
            <summary>
            Returns the elements that are hit at the specified position.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            A sequence of hit results.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Model.GetHitTestElements">
            <summary>
            Gets all elements of the model, top-level elements first.
            </summary>
            <returns>An enumerator of the elements.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.SelectableElement">
            <summary>
            Provides an abstract base class for elements that support selection.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SelectableElement.selection">
            <summary>
            The selection
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.SelectableElement" /> class.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.SelectableElement.SelectionChanged">
            <summary>
            Occurs when the selected items is changed.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.SelectableElement.Selectable">
            <summary>
            Gets or sets a value indicating whether this element can be selected. The default is <c>true</c>.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.SelectableElement.SelectionMode">
            <summary>
            Gets or sets the selection mode of items in this element. The default is <c>SelectionMode.All</c>.
            </summary>
            <value>The selection mode.</value>
            <remarks>This is only used by the select/unselect functionality, not by the rendering.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.SelectableElement.ActualSelectedColor">
            <summary>
            Gets the actual selection color.
            </summary>
            <value>The actual selection color.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.IsSelected">
            <summary>
            Determines whether any part of this element is selected.
            </summary>
            <returns><c>true</c> if this element is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.GetSelectedItems">
            <summary>
            Gets the indices of the selected items in this element.
            </summary>
            <returns>Enumerator of item indices.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.Unselect">
            <summary>
            Unselects all items in this element.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.IsItemSelected(System.Int32)">
            <summary>
            Determines whether the specified item is selected.
            </summary>
            <param name="index">The index of the item.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.Select">
            <summary>
            Selects all items in this element.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.SelectItem(System.Int32)">
            <summary>
            Selects the specified item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.UnselectItem(System.Int32)">
            <summary>
            Unselects the specified item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.GetSelectableColor(Zebble.zebbleOxyPlot.OxyColor,System.Int32)">
            <summary>
            Gets the selection color if the item is selected, or the specified color if it is not.
            </summary>
            <param name="originalColor">The unselected color of the element.</param>
            <param name="index">The index of the item to check (use -1 for all items).</param>
            <returns>A color.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.GetSelectableFillColor(Zebble.zebbleOxyPlot.OxyColor,System.Int32)">
            <summary>
            Gets the selection fill color it the element is selected, or the specified fill color if it is not.
            </summary>
            <param name="originalColor">The unselected fill color of the element.</param>
            <param name="index">The index of the item to check (use -1 for all items).</param>
            <returns>A fill color.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.EnsureSelection">
            <summary>
            Ensures that the selection field is not <c>null</c>.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SelectableElement.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.SelectableElement.SelectionChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.Selection">
            <summary>
            Represents a selection of items (by index) and features (by enumeration type).
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Selection.EverythingSelection">
            <summary>
            Static instance representing everything (all items and all features) selected.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Selection.selection">
            <summary>
            The selection (cannot use HashSet{T} in PCL)
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Selection.Everything">
            <summary>
            Gets the everything selected.
            </summary>
            <value>The everything.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.IsEverythingSelected">
            <summary>
            Determines whether everything is selected.
            </summary>
            <returns><c>true</c> if everything is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.GetSelectedItems">
            <summary>
            Gets the indices of the selected items in this selection.
            </summary>
            <returns>Enumerator of indices.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.GetSelectedItems(System.Enum)">
            <summary>
            Gets the selected items by the specified feature.
            </summary>
            <param name="feature">The feature.</param>
            <returns>Enumerator of indices.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.Clear">
            <summary>
            Clears the selected items.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.IsItemSelected(System.Int32,System.Enum)">
            <summary>
            Determines whether the specified item and feature is selected.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="feature">The feature.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.Select(System.Int32,System.Enum)">
            <summary>
            Selects the specified item/feature.
            </summary>
            <param name="index">The index.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.Unselect(System.Int32,System.Enum)">
            <summary>
            Unselects the specified item.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.Selection.SelectionItem">
            <summary>
            Represents an item in a <see cref="T:Zebble.zebbleOxyPlot.Selection" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Selection.SelectionItem.index">
            <summary>
            The index
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.Selection.SelectionItem.feature">
            <summary>
            The feature
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.SelectionItem.#ctor(System.Int32,System.Enum)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.Selection.SelectionItem" /> struct.
            </summary>
            <param name="index">The index.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Selection.SelectionItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.Selection.SelectionItem.Feature">
            <summary>
            Gets the feature.
            </summary>
            <value>The feature.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.SelectionItem.Equals(Zebble.zebbleOxyPlot.Selection.SelectionItem)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.Selection.SelectionItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.SelectionMode">
            <summary>
            Defines the mode of selection used by <see cref="T:Zebble.zebbleOxyPlot.SelectableElement" />.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SelectionMode.All">
            <summary>
            All the elements will be selected
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SelectionMode.Single">
            <summary>
            A single element will be selected
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SelectionMode.Multiple">
            <summary>
            Multiple elements can be selected
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.UIElement">
            <summary>
            Provides an abstract base class for elements that handle mouse events.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.KeyDown">
            <summary>
            Occurs when a key is pressed down when the plot view is in focus.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.MouseDown">
            <summary>
            Occurs when a mouse button is pressed down on the model.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.MouseMove">
            <summary>
            Occurs when the mouse is moved on the plot element (only occurs after MouseDown).
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.MouseUp">
            <summary>
            Occurs when the mouse button is released on the plot element.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.TouchStarted">
            <summary>
            Occurs when a touch gesture starts.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.TouchDelta">
            <summary>
            Occurs when a touch gesture is changed.
            </summary>
        </member>
        <member name="E:Zebble.zebbleOxyPlot.UIElement.TouchCompleted">
            <summary>
            Occurs when the touch gesture is completed.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.HitTest(Zebble.zebbleOxyPlot.HitTestArguments)">
            <summary>
            Tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            A hit test result.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnMouseDown(Zebble.zebbleOxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.MouseDown" /> event.
            </summary>
            <param name="ee">The <see cref="T:Zebble.zebbleOxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnMouseMove(Zebble.zebbleOxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.MouseMove" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnKeyDown(Zebble.zebbleOxyPlot.OxyKeyEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyKeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnMouseUp(Zebble.zebbleOxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnTouchStarted(Zebble.zebbleOxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.TouchStarted" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnTouchDelta(Zebble.zebbleOxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.TouchDelta" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.OnTouchCompleted(Zebble.zebbleOxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:Zebble.zebbleOxyPlot.UIElement.MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.UIElement.HitTestOverride(Zebble.zebbleOxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.BmpDecoder">
            <summary>
            Implements support for decoding bmp images.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>
            An <see cref="T:Zebble.zebbleOxyPlot.OxyImageInfo" /> structure.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>
            The 32-bit pixel data.
            </returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.BmpEncoder">
            <summary>
            Implements support for encoding bmp images.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.BmpEncoder.options">
            <summary>
            The options
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpEncoder.#ctor(Zebble.zebbleOxyPlot.BmpEncoderOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.BmpEncoder" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpEncoder.Encode(Zebble.zebbleOxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified image data to png.
            </summary>
            <param name="pixels">The pixel data (bottom line first).</param>
            <returns>The png image data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpEncoder.Encode(System.Byte[0:,0:],Zebble.zebbleOxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpEncoder.WriteBitmapInfoHeader(System.IO.BinaryWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Writes the bitmap info header.
            </summary>
            <param name="w">The writer.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerPixel">The number of bits per pixel.</param>
            <param name="length">The length of the pixel data.</param>
            <param name="dpix">The horizontal resolution (dpi).</param>
            <param name="dpiy">The vertical resolution (dpi).</param>
            <param name="colors">The number of colors.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.BmpEncoder.WriteBitmapV4Header(System.IO.BinaryWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes the bitmap V4 header.
            </summary>
            <param name="w">The writer.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerPixel">The number of bits per pixel.</param>
            <param name="length">The length.</param>
            <param name="dpi">The resolution.</param>
            <param name="colors">The number of colors.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.BmpEncoderOptions">
            <summary>
            Represents options for the <see cref="T:Zebble.zebbleOxyPlot.BmpEncoder" />.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.IImageDecoder">
            <summary>
            Specifies functionality to decode an image.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IImageDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>An <see cref="T:Zebble.zebbleOxyPlot.OxyImageInfo" /> structure.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IImageDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>The 32-bit pixel data. The indexing is [x,y] where [0,0] is top-left.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.IImageEncoder">
            <summary>
            Specifies functionality to encode an image.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IImageEncoder.Encode(Zebble.zebbleOxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified pixels.
            </summary>
            <param name="pixels">The pixel data. The indexing is [x,y] where [0,0] is top-left.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IImageEncoder.Encode(System.Byte[0:,0:],Zebble.zebbleOxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The indexed pixel data. The indexing is [x,y] where [0,0] is top-left.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ImageEncoderOptions">
            <summary>
            Provides an abstract base class for image encoder options.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ImageEncoderOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.ImageEncoderOptions" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ImageEncoderOptions.DpiX">
            <summary>
            Gets or sets the horizontal resolution (in dots per inch).
            </summary>
            <value>The resolution. The default value is 96 dpi.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ImageEncoderOptions.DpiY">
            <summary>
            Gets or sets the vertical resolution (in dots per inch).
            </summary>
            <value>The resolution. The default value is 96 dpi.</value>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ImageFormat">
            <summary>
            Defines the image format.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ImageFormat.Png">
            <summary>
            The image is a PNG image.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ImageFormat.Bmp">
            <summary>
            The image is a bitmap image.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ImageFormat.Jpeg">
            <summary>
            The image is a JPEG image.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ImageFormat.Unknown">
            <summary>
            The image format is unknown.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyImage">
            <summary>
            Represents an image.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyImage.data">
            <summary>
            The image data.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyImage.pixels">
            <summary>
            The pixels
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyImage" /> class from the specified stream.
            </summary>
            <param name="ss">A stream that provides the image data.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyImage" /> class from a byte array.
            </summary>
            <param name="bytes">The image bytes.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.Format">
            <summary>
            Gets the image format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.Width">
            <summary>
            Gets the width of the image.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.Height">
            <summary>
            Gets the height of the image.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.BitsPerPixel">
            <summary>
            Gets the number of bits per pixel.
            </summary>
            <value>The bits per pixel.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.DpiX">
            <summary>
            Gets the horizontal resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImage.DpiY">
            <summary>
            Gets the vertical resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.Create(System.Byte[0:,0:],Zebble.zebbleOxyPlot.OxyColor[],Zebble.zebbleOxyPlot.ImageFormat,Zebble.zebbleOxyPlot.ImageEncoderOptions)">
            <summary>
            Creates an image from 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels indexed as [x,y]. [0,0] is top-left.</param>
            <param name="palette">The palette.</param>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The encoder options.</param>
            <returns>An <see cref="T:Zebble.zebbleOxyPlot.OxyImage" /></returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.Create(Zebble.zebbleOxyPlot.OxyColor[0:,0:],Zebble.zebbleOxyPlot.ImageFormat,Zebble.zebbleOxyPlot.ImageEncoderOptions)">
            <summary>
            Creates an image from 32-bit <c>true</c>-color pixels.
            </summary>
            <param name="pixels">The pixels indexed as [x,y]. [0,0] is top-left.</param>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The encoder options.</param>
            <returns>An <see cref="T:Zebble.zebbleOxyPlot.OxyImage" /></returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetData">
            <summary>
            Gets the image data.
            </summary>
            <returns>The image data as a byte array.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetPixels">
            <summary>
            Gets the pixels of the image.
            </summary>
            <returns>The pixels in an array [width,height]. [0,0] is top-left.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetDecoder(Zebble.zebbleOxyPlot.ImageFormat)">
            <summary>
            Gets the <see cref="T:Zebble.zebbleOxyPlot.IImageDecoder" /> for the specified format.
            </summary>
            <param name="format">The image format.</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.IImageDecoder" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetEncoder(Zebble.zebbleOxyPlot.ImageFormat,Zebble.zebbleOxyPlot.ImageEncoderOptions)">
            <summary>
            Gets the <see cref="T:Zebble.zebbleOxyPlot.IImageEncoder" /> for the specified format.
            </summary>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The image encoder options.</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.IImageEncoder" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetImageFormat(System.Byte[])">
            <summary>
            Gets the image format.
            </summary>
            <param name="bytes">The image bytes.</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.ImageFormat" /></returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.GetBytes(System.IO.Stream)">
            <summary>
            Gets the byte array from the specified stream.
            </summary>
            <param name="s">The stream.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyImage.UpdateImageInfo">
            <summary>
            Updates the image information.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyImageInfo">
            <summary>
            Provides information about an <see cref="T:Zebble.zebbleOxyPlot.OxyImage" />.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImageInfo.Width">
            <summary>
            Gets or sets the width in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImageInfo.Height">
            <summary>
            Gets or sets the height in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImageInfo.BitsPerPixel">
            <summary>
            Gets or sets the bits per pixel.
            </summary>
            <value>The bits per pixel.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImageInfo.DpiX">
            <summary>
            Gets or sets the horizontal resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyImageInfo.DpiY">
            <summary>
            Gets or sets the vertical resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PngDecoder">
            <summary>
            Implements support for decoding png images.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>An <see cref="T:Zebble.zebbleOxyPlot.OxyImageInfo" /> structure.</returns>
            <exception cref="T:System.FormatException">Wrong length of pHYs chunk.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>The 32-bit pixel data, indexed as [x,y].</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngDecoder.Deflate(System.Byte[])">
            <summary>
            Deflates the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>The deflated bytes.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ColorType">
            <summary>
            Defines the color type
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ColorType.GrayScale">
            <summary>
            Gray scale
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ColorType.TrueColor">
            <summary>
            True color
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ColorType.IndexedColor">
            <summary>
            Indexed color
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ColorType.GrayScaleWithAlpha">
            <summary>
            Gray scale with alpha
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ColorType.TrueColorWithAlpha">
            <summary>
            True color with alpha
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.CompressionMethod">
            <summary>
            Defines the compression method.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CompressionMethod.Deflate">
            <summary>
            DEFLATE compression
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.FilterMethod">
            <summary>
            Defines the filter method.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FilterMethod.None">
            <summary>
            No filter.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FilterMethod.Sub">
            <summary>
            Sub filter
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FilterMethod.Up">
            <summary>
            Up filter
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FilterMethod.Avg">
            <summary>
            Average filter
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FilterMethod.Paeth">
            <summary>
            Paeth filter
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.InterlaceMethod">
            <summary>
            Defines interlace methods (chapter 8.2)
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.InterlaceMethod.None">
            <summary>
            The <c>null</c> method, pixels are extracted sequentially from left to right, and scan lines sequentially from top to bottom.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.InterlaceMethod.Adam7">
            <summary>
            Adam7, defines seven distinct passes over the image. Each pass transmits a subset of the pixels in the reference image.
            The pass in which each pixel is transmitted (numbered from 1 to 7) is defined by replicating a 8-by-8 pattern over the
            entire image, starting at the upper left corner.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PngEncoder">
            <summary>
            Implements support for encoding png images.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PngEncoder.CrcTable">
            <summary>
            The CRC table
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PngEncoder.options">
            <summary>
            The options
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Zebble.zebbleOxyPlot.PngEncoder" /> class.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.#ctor(Zebble.zebbleOxyPlot.PngEncoderOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.PngEncoder" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.Encode(Zebble.zebbleOxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified image data to png.
            </summary>
            <param name="pixels">The pixel data indexed as [x,y] (bottom line first).</param>
            <returns>The png image data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.Encode(System.Byte[0:,0:],Zebble.zebbleOxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.Adler32(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Calculates the Adler-32 check sum.
            </summary>
            <param name="data">The data.</param>
            <returns>The check sum.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.CreateHeaderData(System.Int32,System.Int32)">
            <summary>
            Creates the header data.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The header.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.CreatePhysicalDimensionsData(System.Double,System.Double)">
            <summary>
            Creates the physical dimensions data.
            </summary>
            <param name="dpix">The horizontal resolution.</param>
            <param name="dpiy">The vertical resolution.</param>
            <returns>The data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.CreateUncompressedBlocks(System.Byte[])">
            <summary>
            Creates the uncompressed blocks.
            </summary>
            <param name="bytes">The data.</param>
            <returns>The output data.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.UpdateCrc(System.UInt64,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Updates the CRC check sum.
            </summary>
            <param name="crc">The input CRC.</param>
            <param name="data">The data.</param>
            <returns>The updated CRC.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.WriteBigEndian(System.IO.BinaryWriter,System.Int32)">
            <summary>
            Writes the integer value with big endian byte order.
            </summary>
            <param name="w">The writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.WriteBigEndian(System.IO.BinaryWriter,System.UInt32)">
            <summary>
            Writes the unsigned integer value with big endian byte order.
            </summary>
            <param name="w">The writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.WriteChunk(System.IO.BinaryWriter,System.String,System.Byte[])">
            <summary>
            Writes a png chunk.
            </summary>
            <param name="w">The writer.</param>
            <param name="type">The chunk type.</param>
            <param name="data">The chunk data.</param>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PngEncoder.MemoryWriter">
            <summary>
            Provides a binary writer that writes to memory.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.MemoryWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.PngEncoder.MemoryWriter" /> class.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PngEncoder.MemoryWriter.ToArray">
            <summary>
            Gets the content as a byte array.
            </summary>
            <returns>The byte array.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PngEncoderOptions">
            <summary>
            Represents options for the <see cref="T:Zebble.zebbleOxyPlot.PngEncoder" />.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyKey">
            <summary>
            Defines the possible key values on a keyboard.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Space">
            <summary>
            The Space key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Enter">
            <summary>
            The Enter key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Escape">
            <summary>
            The Esc key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Tab">
            <summary>
            The Tab key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Backspace">
            <summary>
            The Backspace key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Insert">
            <summary>
            The Insert key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Delete">
            <summary>
            The Delete key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Home">
            <summary>
            The Home key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.End">
            <summary>
            The End key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Up">
            <summary>
            The Up arrow key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Down">
            <summary>
            The Down arrow key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Left">
            <summary>
            The Left arrow key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Right">
            <summary>
            The Right arrow key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.PageUp">
            <summary>
            The Page up key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.PageDown">
            <summary>
            The Page down key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.A">
            <summary>
            The A key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.B">
            <summary>
            The B key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.C">
            <summary>
            The C key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D">
            <summary>
            The D key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.E">
            <summary>
            The E key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F">
            <summary>
            The F key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.G">
            <summary>
            The G key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.H">
            <summary>
            The H key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.I">
            <summary>
            The I key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.J">
            <summary>
            The J key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.K">
            <summary>
            The K key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.L">
            <summary>
            The L key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.M">
            <summary>
            The M key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.N">
            <summary>
            The N key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.O">
            <summary>
            The O key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.P">
            <summary>
            The P key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Q">
            <summary>
            The Q key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.R">
            <summary>
            The R key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.S">
            <summary>
            The S key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.T">
            <summary>
            The T key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.U">
            <summary>
            The U key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.V">
            <summary>
            The V key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.W">
            <summary>
            The W key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.X">
            <summary>
            The X key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Y">
            <summary>
            The Y key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Z">
            <summary>
            The Z key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D0">
            <summary>
            The 0 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D1">
            <summary>
            The 1 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D2">
            <summary>
            The 2 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D3">
            <summary>
            The 3 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D4">
            <summary>
            The 4 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D5">
            <summary>
            The 5 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D6">
            <summary>
            The 6 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D7">
            <summary>
            The 7 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D8">
            <summary>
            The 8 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.D9">
            <summary>
            The 9 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad0">
            <summary>
            The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad1">
            <summary>
            The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad2">
            <summary>
            The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad3">
            <summary>
            The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad4">
            <summary>
            The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad5">
            <summary>
            The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad6">
            <summary>
            The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad7">
            <summary>
            The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad8">
            <summary>
            The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.NumPad9">
            <summary>
            The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Add">
            <summary>
            The add key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Subtract">
            <summary>
            The subtract key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Multiply">
            <summary>
            The multiply key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Divide">
            <summary>
            The divide key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Decimal">
            <summary>
            The decimal key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F1">
            <summary>
            The F1 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F2">
            <summary>
            The F2 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F3">
            <summary>
            The F3 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F4">
            <summary>
            The F4 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F5">
            <summary>
            The F5 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F6">
            <summary>
            The F6 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F7">
            <summary>
            The F7 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F8">
            <summary>
            The F8 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F9">
            <summary>
            The F9 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F10">
            <summary>
            The F10 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F11">
            <summary>
            The F11 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.F12">
            <summary>
            The F12 key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyKey.Unknown">
            <summary>
            Unknown/not supported key.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyModifierKeys">
            <summary>
            Defines the set of modifier keys.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyModifierKeys.None">
            <summary>
            No modifiers are pressed.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyModifierKeys.Control">
            <summary>
            The Control key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyModifierKeys.Alt">
            <summary>
            The Alt/Menu key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyModifierKeys.Shift">
            <summary>
            The Shift key.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyModifierKeys.Windows">
            <summary>
            The Windows key.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyMouseButton">
            <summary>
            Defines values that specify the buttons on a mouse device.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.None">
            <summary>
            No mouse button.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.Left">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.Middle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.Right">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.XButton1">
            <summary>
            The first extended mouse button.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyMouseButton.XButton2">
            <summary>
            The second extended mouse button.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyInputEventArgs">
            <summary>
            Provides an abstract base class for classes that contain event data for input events.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyInputEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyInputEventArgs.ModifierKeys">
            <summary>
            Gets or sets the modifier keys.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyInputEventArgs.IsAltDown">
            <summary>
            Gets a value indicating whether the alt key was pressed when the event was raised.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyInputEventArgs.IsControlDown">
            <summary>
            Gets a value indicating whether the control key was pressed when the event was raised.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyInputEventArgs.IsShiftDown">
            <summary>
            Gets a value indicating whether the shift key was pressed when the event was raised.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyKeyEventArgs">
            <summary>
            Provides data for key events.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyKeyEventArgs.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyMouseDownEventArgs">
            <summary>
            Provides data for the mouse down events.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyMouseDownEventArgs.ChangedButton">
            <summary>
            Gets or sets the mouse button that has changed.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyMouseDownEventArgs.ClickCount">
            <summary>
            Gets or sets the number of times the button was clicked.
            </summary>
            <value>The number of times the mouse button was clicked.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyMouseDownEventArgs.HitTestResult">
            <summary>
            Gets or sets the hit test result.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyMouseEventArgs">
            <summary>
            Provides data for the mouse events.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyMouseEventArgs.Position">
            <summary>
            Gets or sets the position of the mouse cursor.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs">
            <summary>
            Provides data for touch events.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyTouchEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs" /> class.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyTouchEventArgs.#ctor(Zebble.zebbleOxyPlot.ScreenPoint[],Zebble.zebbleOxyPlot.ScreenPoint[])">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyTouchEventArgs" /> class.
            </summary>
            <param name="currentTouches">The current touches.</param>
            <param name="previousTouches">The previous touches.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyTouchEventArgs.Position">
            <summary>
            Gets or sets the position of the touch.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyTouchEventArgs.DeltaScale">
            <summary>
            Gets or sets the relative change in scale.
            </summary>
            <value>The scale change.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyTouchEventArgs.DeltaTranslation">
            <summary>
            Gets or sets the change in x and y direction.
            </summary>
            <value>The translation.</value>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PlotElement">
            <summary>
            Provides an abstract base class for elements of a <see cref="P:Zebble.zebbleOxyPlot.PlotElement.PlotModel" />.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.PlotElement" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.Font">
            <summary>
            Gets or sets the font. The default is <c>null</c> (use <see cref="P:OxyPlot.PlotModel.DefaultFont" />.
            </summary>
            <value>The font.</value>
            <remarks>If the value is <c>null</c>, the DefaultFont of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.FontSize">
            <summary>
            Gets or sets the size of the font. The default is <c>double.NaN</c> (use <see cref="P:OxyPlot.PlotModel.DefaultFontSize" />).
            </summary>
            <value>The size of the font.</value>
            <remarks>If the value is <c>NaN</c>, the DefaultFontSize of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.FontWeight">
            <summary>
            Gets or sets the font weight. The default is <c>FontWeights.Normal</c>.
            </summary>
            <value>The font weight.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.PlotModel">
            <summary>
            Gets the parent <see cref="P:Zebble.zebbleOxyPlot.PlotElement.PlotModel" />.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information about this plot element. The default is <c>null</c>.
            </summary>
            <value>The intended value.</value>
            <remarks>This property is analogous to Tag properties in other Microsoft programming models. Tag is intended to provide a pre-existing property location where you can store some basic custom information about any PlotElement without requiring you to subclass an element.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.TextColor">
            <summary>
            Gets or sets the color of the text. The default is <c>OxyColors.Automatic</c> (use <see cref="P:OxyPlot.PlotModel.TextColor" />).
            </summary>
            <value>The color of the text.</value>
            <remarks>If the value is <c>OxyColors.Automatic</c>, the TextColor of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ToolTip">
            <summary>
            Gets or sets the tool tip. The default is <c>null</c>.
            </summary>
            <value>
            The tool tip string.
            </value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ActualFont">
            <summary>
            Gets the actual font.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ActualFontSize">
            <summary>
            Gets the actual size of the font.
            </summary>
            <value>The actual size of the font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ActualFontWeight">
            <summary>
            Gets the actual font weight.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ActualTextColor">
            <summary>
            Gets the actual color of the text.
            </summary>
            <value>The actual color of the text.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotElement.ActualCulture">
            <summary>
            Gets the actual culture.
            </summary>
            <remarks>The culture is defined in the parent PlotModel.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotElement.GetElementHashCode">
            <summary>
            Returns a hash code for this element.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <remarks>This method creates the hash code by reflecting the value of all public properties.</remarks>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PlotModel">
            <summary>
            Represents a plot.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotModel.plotViewReference">
            <summary>
            The plot view that renders this plot.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotModel.currentColorIndex">
            <summary>
            The current color index.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotModel.isDataUpdated">
            <summary>
            Flags if the data has been updated.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotModel.lastPlotException">
            <summary>
            The last update exception.
            </summary>
            <value>The exception or <c>null</c> if there was no exceptions during the last update.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.PlotModel" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.DefaultFont">
            <summary>
            Gets or sets the default font.
            </summary>
            <value>The default font.</value>
            <remarks>This font is used for text on axes, series, legends and plot titles unless other fonts are specified.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.DefaultFontSize">
            <summary>
            Gets or sets the default size of the fonts.
            </summary>
            <value>The default size of the font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.ActualCulture">
            <summary>
            Gets the actual culture.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotView">
            <summary>
            Gets the plot view that renders this plot.
            </summary>
            <value>The plot view.</value>
            <remarks>Only one view can render the plot at the same time.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Axes">
            <summary>
            Gets the axes.
            </summary>
            <value>The axes.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Background">
            <summary>
            Gets or sets the color of the background of the plot.
            </summary>
            <value>The color. The default is <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Undefined" />.</value>
            <remarks>If the background color is set to <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Undefined" />, the default color of the plot view will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.DefaultColors">
            <summary>
            Gets or sets the default colors.
            </summary>
            <value>The default colors.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.IsLegendVisible">
            <summary>
            Gets or sets a value indicating whether the legend is visible. The titles of the series must be set to use the legend.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendBackground">
            <summary>
            Gets or sets the background color of the legend. Use <c>null</c> for no background.
            </summary>
            <value>The legend background.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendBorder">
            <summary>
            Gets or sets the border color of the legend.
            </summary>
            <value>The legend border.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendBorderThickness">
            <summary>
            Gets or sets the thickness of the legend border. Use 0 for no border.
            </summary>
            <value>The legend border thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendColumnSpacing">
            <summary>
            Gets or sets the spacing between columns of legend items (only for vertical orientation).
            </summary>
            <value>The spacing in device independent units.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendFont">
            <summary>
            Gets or sets the legend font.
            </summary>
            <value>The legend font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendFontSize">
            <summary>
            Gets or sets the size of the legend font.
            </summary>
            <value>The size of the legend font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTextColor">
            <summary>
            Gets or sets the color of the legend text.
            </summary>
            <value>The color of the legend text.</value>
            <remarks>If this value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendFontWeight">
            <summary>
            Gets or sets the legend font weight.
            </summary>
            <value>The legend font weight.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendItemAlignment">
            <summary>
            Gets or sets the legend item alignment.
            </summary>
            <value>The legend item alignment.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendItemOrder">
            <summary>
            Gets or sets the legend item order.
            </summary>
            <value>The legend item order.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendItemSpacing">
            <summary>
            Gets or sets the horizontal spacing between legend items when the orientation is horizontal.
            </summary>
            <value>The horizontal distance between items in device independent units.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendLineSpacing">
            <summary>
            Gets or sets the vertical spacing between legend items.
            </summary>
            <value>The spacing in device independent units.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendMargin">
            <summary>
            Gets or sets the legend margin.
            </summary>
            <value>The legend margin.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendMaxWidth">
            <summary>
            Gets or sets the max width of the legend.
            </summary>
            <value>The max width of the legend.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendMaxHeight">
            <summary>
            Gets or sets the max height of the legend.
            </summary>
            <value>The max height of the legend.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendOrientation">
            <summary>
            Gets or sets the legend orientation.
            </summary>
            <value>The legend orientation.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendPadding">
            <summary>
            Gets or sets the legend padding.
            </summary>
            <value>The legend padding.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendPlacement">
            <summary>
            Gets or sets the legend placement.
            </summary>
            <value>The legend placement.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendPosition">
            <summary>
            Gets or sets the legend position.
            </summary>
            <value>The legend position.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendSymbolLength">
            <summary>
            Gets or sets the length of the legend symbols (the default value is 16).
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendSymbolMargin">
            <summary>
            Gets or sets the legend symbol margins (distance between the symbol and the text).
            </summary>
            <value>The legend symbol margin.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendSymbolPlacement">
            <summary>
            Gets or sets the legend symbol placement.
            </summary>
            <value>The legend symbol placement.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTitle">
            <summary>
            Gets or sets the legend title.
            </summary>
            <value>The legend title.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTitleColor">
            <summary>
            Gets or sets the color of the legend title.
            </summary>
            <value>The color of the legend title.</value>
            <remarks>If this value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTitleFont">
            <summary>
            Gets or sets the legend title font.
            </summary>
            <value>The legend title font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTitleFontSize">
            <summary>
            Gets or sets the size of the legend title font.
            </summary>
            <value>The size of the legend title font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.LegendTitleFontWeight">
            <summary>
            Gets or sets the legend title font weight.
            </summary>
            <value>The legend title font weight.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Padding">
            <summary>
            Gets or sets the padding around the plot.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Width">
            <summary>
            Gets the total width of the plot (in device units).
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Height">
            <summary>
            Gets the total height of the plot (in device units).
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotAndAxisArea">
            <summary>
            Gets the area including both the plot and the axes. Outside legends are rendered outside this rectangle.
            </summary>
            <value>The plot and axis area.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotArea">
            <summary>
            Gets the plot area. This area is used to draw the series (not including axes or legends).
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.AxisTierDistance">
            <summary>
            Gets or sets the distance between two neighborhood tiers of the same AxisPosition.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotAreaBackground">
            <summary>
            Gets or sets the color of the background of the plot area.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotAreaBorderColor">
            <summary>
            Gets or sets the color of the border around the plot area.
            </summary>
            <value>The color of the box.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotAreaBorderThickness">
            <summary>
            Gets or sets the thickness of the border around the plot area.
            </summary>
            <value>The box thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotMargins">
            <summary>
            Gets or sets the margins around the plot (this should be large enough to fit the axes).
            If any of the values is set to <c>double.NaN</c>, the margin is adjusted to the value required by the axes.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.PlotType">
            <summary>
            Gets or sets the type of the coordinate system.
            </summary>
            <value>The type of the plot.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.RenderingDecorator">
            <summary>
            Gets or sets the rendering decorator.
            </summary>
            <value>
            The rendering decorator.
            </value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Subtitle">
            <summary>
            Gets or sets the subtitle.
            </summary>
            <value>The subtitle.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.SubtitleFont">
            <summary>
            Gets or sets the subtitle font. If this property is <c>null</c>, the Title font will be used.
            </summary>
            <value>The subtitle font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.SubtitleFontSize">
            <summary>
            Gets or sets the size of the subtitle font.
            </summary>
            <value>The size of the subtitle font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.SubtitleFontWeight">
            <summary>
            Gets or sets the subtitle font weight.
            </summary>
            <value>The subtitle font weight.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TextColor">
            <summary>
            Gets or sets the default color of the text in the plot (titles, legends, annotations, axes).
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleToolTip">
            <summary>
            Gets or sets the title tool tip.
            </summary>
            <value>The title tool tip.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
            <remarks>If the value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.SubtitleColor">
            <summary>
            Gets or sets the color of the subtitle.
            </summary>
            <value>The color of the subtitle.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the title and subtitle.
            </summary>
            <value>
            The alignment.
            </value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleFont">
            <summary>
            Gets or sets the title font.
            </summary>
            <value>The title font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleFontSize">
            <summary>
            Gets or sets the size of the title font.
            </summary>
            <value>The size of the title font.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitleFontWeight">
            <summary>
            Gets or sets the title font weight.
            </summary>
            <value>The title font weight.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.TitlePadding">
            <summary>
            Gets or sets the padding around the title.
            </summary>
            <value>The title padding.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.DefaultXAxis">
            <summary>
            Gets the default X axis.
            </summary>
            <value>The default X axis.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.DefaultYAxis">
            <summary>
            Gets the default Y axis.
            </summary>
            <value>The default Y axis.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.ActualTitleFont">
            <summary>
            Gets the actual title font.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.PlotModel.ActualSubtitleFont">
            <summary>
            Gets the actual subtitle font.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.GetDefaultColor">
            <summary>
            Gets the default color from the DefaultColors palette.
            </summary>
            <returns>The next default color.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.GetLastPlotException">
            <summary>
            Gets any exception thrown during the last <see cref="!:IPlotModel.Update" /> call.
            </summary>
            <returns>The exception or <c>null</c> if there was no exception.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.GetAxisOrDefault(System.String,Zebble.zebbleOxyPlot.Axis)">
            <summary>
            Gets the axis for the specified key.
            </summary>
            <param name="key">The axis key.</param>
            <param name="defaultAxis">The default axis.</param>
            <returns>The axis, or the defaultAxis if the key is not specified.</returns>
            <exception cref="T:System.InvalidOperationException">Cannot find axis with the specified key.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.ResetAllAxes">
            <summary>
            Resets all axes in the model.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.PanAllAxes(System.Double,System.Double)">
            <summary>
            Pans all axes.
            </summary>
            <param name="dx">The horizontal distance to pan (screen coordinates).</param>
            <param name="dy">The vertical distance to pan (screen coordinates).</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.ZoomAllAxes(System.Double)">
            <summary>
            Zooms all axes.
            </summary>
            <param name="factor">The zoom factor.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.PlotModel.GetHitTestElements">
            <summary>
            Gets all elements of the model, top-level elements first.
            </summary>
            <returns>
            An enumerator of the elements.
            </returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.PlotType">
            <summary>
            Specifies the coordinate system type.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotType.XY">
            <summary>
            XY coordinate system - two perpendicular axes
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotType.Cartesian">
            <summary>
            Cartesian coordinate system - perpendicular axes with the same scaling.
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Cartesian_coordinate_system</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.PlotType.Polar">
            <summary>
            Polar coordinate system - with radial and angular axes
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Polar_coordinate_system</remarks>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LegendPlacement">
            <summary>
            Specifies the placement of the legend box.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPlacement.Inside">
            <summary>
            Place the legends inside the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPlacement.Outside">
            <summary>
            Place the legends outside the plot area.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LegendPosition">
            <summary>
            Specifies the position of the legend box.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.TopLeft">
            <summary>
            Place the legend box in the top-left corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.TopCenter">
            <summary>
            Place the legend box centered at the top.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.TopRight">
            <summary>
            Place the legend box in the top-right corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.BottomLeft">
            <summary>
            Place the legend box in the bottom-left corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.BottomCenter">
            <summary>
            Place the legend box centered at the bottom.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.BottomRight">
            <summary>
            Place the legend box in the bottom-right corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.LeftTop">
            <summary>
            Place the legend box in the left-top corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.LeftMiddle">
            <summary>
            Place the legend box centered at the left.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.LeftBottom">
            <summary>
            Place the legend box in the left-bottom corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.RightTop">
            <summary>
            Place the legend box in the right-top corner.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.RightMiddle">
            <summary>
            Place the legend box centered at the right.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendPosition.RightBottom">
            <summary>
            Place the legend box in the right-bottom corner.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LegendOrientation">
            <summary>
            Specifies the orientation of the items in the legend box.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendOrientation.Horizontal">
            <summary>
            Orient the items horizontally.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendOrientation.Vertical">
            <summary>
            Orient the items vertically.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LegendItemOrder">
            <summary>
            Specifies the item order of the legends.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendItemOrder.Normal">
            <summary>
            Render the items in the normal order.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendItemOrder.Reverse">
            <summary>
            Render the items in the reverse order.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LegendSymbolPlacement">
            <summary>
            Specifies the placement of the legend symbols.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendSymbolPlacement.Left">
            <summary>
            Render symbols to the left of the labels.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LegendSymbolPlacement.Right">
            <summary>
            Render symbols to the right of the labels.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.TitleHorizontalAlignment">
            <summary>
            Specifies the horizontal alignment of the titles.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TitleHorizontalAlignment.CenteredWithinPlotArea">
            <summary>
            Centered within the plot area.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.TitleHorizontalAlignment.CenteredWithinView">
            <summary>
            Centered within the client view (excluding padding defined in <see cref="P:Zebble.zebbleOxyPlot.PlotModel.Padding" />).
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.FontWeights">
            <summary>
            Defines standard font weight values.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FontWeights.Bold">
            <summary>
            Specifies a bold font weight.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.FontWeights.Normal">
            <summary>
            Specifies a normal font weight.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LineJoin">
            <summary>
            Defines how to join line segments.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineJoin.Miter">
            <summary>
            Line joins use regular angular vertices.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineJoin.Round">
            <summary>
            Line joins use rounded vertices.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineJoin.Bevel">
            <summary>
            Line joins use beveled vertices.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.LineStyle">
            <summary>
            Defines the style of a line.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.Solid">
            <summary>
            The solid line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.Dash">
            <summary>
            The dash line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.Dot">
            <summary>
            The dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.DashDot">
            <summary>
            The dash dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.DashDashDot">
            <summary>
            The dash dash dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.DashDotDot">
            <summary>
            The dash dot dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.DashDashDotDot">
            <summary>
            The dash dash dot dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.LongDash">
            <summary>
            The long dash line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.LongDashDot">
            <summary>
            The long dash dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.LongDashDotDot">
            <summary>
            The long dash dot dot line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.None">
            <summary>
            The hidden line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.LineStyle.Automatic">
            <summary>
            The automatic line style.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColor.red">
            <summary>
            The red component.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColor.green">
            <summary>
            The green component.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColor.blue">
            <summary>
            The blue component.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColor.alfa">
            <summary>
            The alpha component.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyColor"/> struct.
            </summary>
            <param name="alfa">The alpha value.</param>
            <param name="red">The red value.</param>
            <param name="green">The green value.</param>
            <param name="blue">The blue value.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyColor.A">
            <summary>
            Gets the alpha value.
            </summary>
            <value>The alpha value.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyColor.B">
            <summary>
            Gets the blue value.
            </summary>
            <value>The blue value.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyColor.G">
            <summary>
            Gets the green value.
            </summary>
            <value>The green value.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyColor.R">
            <summary>
            Gets the red value.
            </summary>
            <value>The red value.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.Parse(System.String)">
            <summary>
            Parse a string.
            </summary>
            <param name="value">The string in the format <c>"#FFFFFF00"</c> or <c>"255,200,180,50"</c>.</param>
            <returns>The parsed color.</returns>
            <exception cref="T:System.FormatException">Invalid format.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.ColorDifference(Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Calculates the difference between two <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />s
            </summary>
            <param name="c1">The first color.</param>
            <param name="c2">The second color.</param>
            <returns>L2-norm in ARGB space</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromUInt32(System.UInt32)">
            <summary>
            Convert an <see cref="T:System.UInt32" /> to a <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />.
            </summary>
            <param name="color">The unsigned integer color value.</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromHsv(System.Double[])">
            <summary>
            Creates a OxyColor from the specified HSV array.
            </summary>
            <param name="hsv">The HSV value array.</param>
            <returns>A OxyColor.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromHsv(System.Double,System.Double,System.Double)">
            <summary>
            Converts from HSV to <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />
            </summary>
            <param name="hue">The hue value [0,1]</param>
            <param name="sat">The saturation value [0,1]</param>
            <param name="val">The intensity value [0,1]</param>
            <returns>The <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />.</returns>
            <remarks>See <a href="http://en.wikipedia.org/wiki/HSL_Color_space">Wikipedia</a>.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.HueDifference(Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Calculate the difference in hue between two <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />s.
            </summary>
            <param name="c1">The first color.</param>
            <param name="c2">The second color.</param>
            <returns>The hue difference.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromAColor(System.Byte,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Creates a color defined by an alpha value and another color.
            </summary>
            <param name="a">Alpha value.</param>
            <param name="color">The original color.</param>
            <returns>A color.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a color from the specified ARGB values.
            </summary>
            <param name="a">The alpha value.</param>
            <param name="red">The red value.</param>
            <param name="green">The green value.</param>
            <param name="blue">The blue value.</param>
            <returns>A color.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> structure from the specified RGB values.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
            <returns>A <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> structure with the specified values and an alpha channel value of 1.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.Interpolate(Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Interpolates the specified colors.
            </summary>
            <param name="color1">The color1.</param>
            <param name="color2">The color2.</param>
            <param name="tt">The t.</param>
            <returns>The interpolated color</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.op_Equality(Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Determines whether the specified colors are equal to each other.
            </summary>
            <param name="first">The first color.</param>
            <param name="second">The second color.</param>
            <returns><c>true</c> if the two colors are equal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.op_Inequality(Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Determines whether the specified colors are not equal to each other.
            </summary>
            <param name="first">The first color.</param>
            <param name="second">The second color.</param>
            <returns><c>true</c> if the two colors are not equal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.Equals(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Determines whether the specified <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> is equal to this instance; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.IsInvisible">
            <summary>
            Determines whether this color is invisible.
            </summary>
            <returns><c>True</c> if the alpha value is 0.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.IsVisible">
            <summary>
            Determines whether this color is visible.
            </summary>
            <returns><c>True</c> if the alpha value is greater than 0.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.IsUndefined">
            <summary>
            Determines whether this color is undefined.
            </summary>
            <returns><c>True</c> if the color equals <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Undefined" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.IsAutomatic">
            <summary>
            Determines whether this color is automatic.
            </summary>
            <returns><c>True</c> if the color equals <see cref="F:Zebble.zebbleOxyPlot.OxyColors.Automatic" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.GetActualColor(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Gets the actual color.
            </summary>
            <param name="defaultColor">The default color.</param>
            <returns>The default color if the current color equals OxyColors.Automatic, otherwise the color itself.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyColor.Zebble#zebbleOxyPlot#ICodeGenerating#ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The C# code.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyColors">
            <summary>
            Implements a set of predefined colors.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Undefined">
            <summary>
            The undefined color.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Automatic">
            <summary>
            The automatic color.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.AliceBlue">
            <summary>
            The alice blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.AntiqueWhite">
            <summary>
            The antique white.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Aqua">
            <summary>
            The aqua.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Aquamarine">
            <summary>
            The aquamarine.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Azure">
            <summary>
            The azure.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Beige">
            <summary>
            The beige.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Bisque">
            <summary>
            The bisque.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Black">
            <summary>
            The black.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.BlanchedAlmond">
            <summary>
            The blanched almond.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Blue">
            <summary>
            The blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.BlueViolet">
            <summary>
            The blue violet.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Brown">
            <summary>
            The brown.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.BurlyWood">
            <summary>
            The burly wood.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.CadetBlue">
            <summary>
            The cadet blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Chartreuse">
            <summary>
            The chartreuse.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Chocolate">
            <summary>
            The chocolate.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Coral">
            <summary>
            The coral.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.CornflowerBlue">
            <summary>
            The cornflower blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Cornsilk">
            <summary>
            The cornsilk.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Crimson">
            <summary>
            The crimson.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Cyan">
            <summary>
            The cyan.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkBlue">
            <summary>
            The dark blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkCyan">
            <summary>
            The dark cyan.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkGoldenrod">
            <summary>
            The dark goldenrod.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkGray">
            <summary>
            The dark gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkGreen">
            <summary>
            The dark green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkKhaki">
            <summary>
            The dark khaki.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkMagenta">
            <summary>
            The dark magenta.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkOliveGreen">
            <summary>
            The dark olive green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkOrange">
            <summary>
            The dark orange.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkOrchid">
            <summary>
            The dark orchid.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkRed">
            <summary>
            The dark red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkSalmon">
            <summary>
            The dark salmon.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkSeaGreen">
            <summary>
            The dark sea green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkSlateBlue">
            <summary>
            The dark slate blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkSlateGray">
            <summary>
            The dark slate gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkTurquoise">
            <summary>
            The dark turquoise.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DarkViolet">
            <summary>
            The dark violet.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DeepPink">
            <summary>
            The deep pink.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DeepSkyBlue">
            <summary>
            The deep sky blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DimGray">
            <summary>
            The dim gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.DodgerBlue">
            <summary>
            The dodger blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Firebrick">
            <summary>
            The firebrick.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.FloralWhite">
            <summary>
            The floral white.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.ForestGreen">
            <summary>
            The forest green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Fuchsia">
            <summary>
            The fuchsia.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Gainsboro">
            <summary>
            The gainsboro.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.GhostWhite">
            <summary>
            The ghost white.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Gold">
            <summary>
            The gold.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Goldenrod">
            <summary>
            The goldenrod.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Gray">
            <summary>
            The gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Green">
            <summary>
            The green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.GreenYellow">
            <summary>
            The green yellow.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Honeydew">
            <summary>
            The honeydew.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.HotPink">
            <summary>
            The hot pink.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.IndianRed">
            <summary>
            The indian red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Indigo">
            <summary>
            The indigo.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Ivory">
            <summary>
            The ivory.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Khaki">
            <summary>
            The khaki.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Lavender">
            <summary>
            The lavender.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LavenderBlush">
            <summary>
            The lavender blush.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LawnGreen">
            <summary>
            The lawn green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LemonChiffon">
            <summary>
            The lemon chiffon.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightBlue">
            <summary>
            The light blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightCoral">
            <summary>
            The light coral.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightCyan">
            <summary>
            The light cyan.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightGoldenrodYellow">
            <summary>
            The light goldenrod yellow.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightGray">
            <summary>
            The light gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightGreen">
            <summary>
            The light green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightPink">
            <summary>
            The light pink.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightSalmon">
            <summary>
            The light salmon.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightSeaGreen">
            <summary>
            The light sea green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightSkyBlue">
            <summary>
            The light sky blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightSlateGray">
            <summary>
            The light slate gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightSteelBlue">
            <summary>
            The light steel blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LightYellow">
            <summary>
            The light yellow.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Lime">
            <summary>
            The lime.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.LimeGreen">
            <summary>
            The lime green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Linen">
            <summary>
            The linen.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Magenta">
            <summary>
            The magenta.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Maroon">
            <summary>
            The maroon.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumAquamarine">
            <summary>
            The medium aquamarine.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumBlue">
            <summary>
            The medium blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumOrchid">
            <summary>
            The medium orchid.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumPurple">
            <summary>
            The medium purple.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumSeaGreen">
            <summary>
            The medium sea green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumSlateBlue">
            <summary>
            The medium slate blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumSpringGreen">
            <summary>
            The medium spring green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumTurquoise">
            <summary>
            The medium turquoise.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MediumVioletRed">
            <summary>
            The medium violet red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MidnightBlue">
            <summary>
            The midnight blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MintCream">
            <summary>
            The mint cream.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.MistyRose">
            <summary>
            The misty rose.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Moccasin">
            <summary>
            The moccasin.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.NavajoWhite">
            <summary>
            The navajo white.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Navy">
            <summary>
            The navy.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.OldLace">
            <summary>
            The old lace.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Olive">
            <summary>
            The olive.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.OliveDrab">
            <summary>
            The olive drab.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Orange">
            <summary>
            The orange.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.OrangeRed">
            <summary>
            The orange red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Orchid">
            <summary>
            The orchid.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PaleGoldenrod">
            <summary>
            The pale goldenrod.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PaleGreen">
            <summary>
            The pale green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PaleTurquoise">
            <summary>
            The pale turquoise.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PaleVioletRed">
            <summary>
            The pale violet red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PapayaWhip">
            <summary>
            The papaya whip.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PeachPuff">
            <summary>
            The peach puff.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Peru">
            <summary>
            The peru.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Pink">
            <summary>
            The pink.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Plum">
            <summary>
            The plum.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.PowderBlue">
            <summary>
            The powder blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Purple">
            <summary>
            The purple.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Red">
            <summary>
            The red.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.RosyBrown">
            <summary>
            The rosy brown.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.RoyalBlue">
            <summary>
            The royal blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SaddleBrown">
            <summary>
            The saddle brown.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Salmon">
            <summary>
            The salmon.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SandyBrown">
            <summary>
            The sandy brown.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SeaGreen">
            <summary>
            The sea green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SeaShell">
            <summary>
            The sea shell.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Sienna">
            <summary>
            The sienna.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Silver">
            <summary>
            The silver.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SkyBlue">
            <summary>
            The sky blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SlateBlue">
            <summary>
            The slate blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SlateGray">
            <summary>
            The slate gray.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Snow">
            <summary>
            The snow.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SpringGreen">
            <summary>
            The spring green.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.SteelBlue">
            <summary>
            The steel blue.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Tan">
            <summary>
            The tan.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Teal">
            <summary>
            The teal.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Thistle">
            <summary>
            The thistle.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Tomato">
            <summary>
            The tomato.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Transparent">
            <summary>
            The transparent.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Turquoise">
            <summary>
            The turquoise.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Violet">
            <summary>
            The violet.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Wheat">
            <summary>
            The wheat.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.White">
            <summary>
            The white.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.WhiteSmoke">
            <summary>
            The white smoke.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.Yellow">
            <summary>
            The yellow.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyColors.YellowGreen">
            <summary>
            The yellow green.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyPen">
            <summary>
            Describes a pen in terms of color, thickness, line style and line join type.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyPen.#ctor(Zebble.zebbleOxyPlot.OxyColor,System.Double,Zebble.zebbleOxyPlot.LineStyle,Zebble.zebbleOxyPlot.LineJoin)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyPen" /> class.
            </summary>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.Color">
            <summary>
            Gets or sets the color of the pen.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.DashArray">
            <summary>
            Gets or sets the dash array (overrides <see cref="P:Zebble.zebbleOxyPlot.OxyPen.LineStyle" />).
            </summary>
            <value>The dash array.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.LineJoin">
            <summary>
            Gets or sets the line join type.
            </summary>
            <value>The line join type.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.LineStyle">
            <summary>
            Gets or sets the line style (overridden by <see cref="P:Zebble.zebbleOxyPlot.OxyPen.DashArray" />).
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.Thickness">
            <summary>
            Gets or sets the line thickness.
            </summary>
            <value>The line thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyPen.ActualDashArray">
            <summary>
            Gets the actual dash array.
            </summary>
            <value>The actual dash array.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyPen.Create(Zebble.zebbleOxyPlot.OxyColor,System.Double,Zebble.zebbleOxyPlot.LineStyle,Zebble.zebbleOxyPlot.LineJoin)">
            <summary>
            Creates the specified pen.
            </summary>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
            <returns>A pen.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyPen.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyRect">
            <summary>
            Describes the width, height, and point origin of a rectangle.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyRect.height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyRect.left">
            <summary>
            The x-coordinate location of the left side of the rectangle.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyRect.top">
            <summary>
            The y-coordinate location of the top side of the rectangle.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyRect.width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyRect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.
            </summary>
            <param name="left">The x-coordinate location of the left side of the rectangle.</param>
            <param name="top">The y-coordinate location of the top side of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">width;The width should not be negative.
            or
            height;The height should not be negative.</exception>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.#ctor(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyRect" /> struct that is exactly large enough to contain the two specified points.
            </summary>
            <param name="p0">The first point that the new rectangle must contain.</param>
            <param name="p1">The second point that the new rectangle must contain.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.#ctor(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.OxySize)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyRect"/> struct by location and size.
            </summary>
            <param name="p0">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Bottom">
            <summary>
            Gets the y-axis value of the bottom of the rectangle.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Height">
            <summary>
            Gets the height of the rectangle.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Left">
            <summary>
            Gets the x-axis value of the left side of the rectangle.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Right">
            <summary>
            Gets the x-axis value of the right side of the rectangle.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Top">
            <summary>
            Gets the y-axis position of the top of the rectangle.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Width">
            <summary>
            Gets the width of the rectangle.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyRect.Center">
            <summary>
            Gets the center point of the rectangle.
            </summary>
            <value>The center.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a rectangle from the specified corner coordinates.
            </summary>
            <param name="x0">The x0.</param>
            <param name="y0">The y0.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <returns>A rectangle.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Contains(System.Double,System.Double)">
            <summary>
            Determines whether the specified point is inside the rectangle.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns><c>true</c> if the rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Contains(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is inside the rectangle.
            </summary>
            <param name="p">The point.</param>
            <returns><c>true</c> if the rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Equals(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxyRect" /> object have the same value.
            </summary>
            <param name="other">The rectangle to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Inflate(System.Double,System.Double)">
            <summary>
            Returns a rectangle that is expanded or shrunk by the specified width and height amounts, in all directions.
            </summary>
            <param name="dx">The amount by which to expand or shrink the left and right sides of the rectangle.</param>
            <param name="dy">The amount by which to expand or shrink the top and bottom sides of the rectangle.</param>
            <returns>The expanded/shrunk <see cref="T:Zebble.zebbleOxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Inflate(Zebble.zebbleOxyPlot.OxyThickness)">
            <summary>
            Returns a rectangle that is expanded by the specified thickness, in all directions.
            </summary>
            <param name="t">The thickness to apply to the rectangle.</param>
            <returns>The inflated <see cref="T:Zebble.zebbleOxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Deflate(Zebble.zebbleOxyPlot.OxyThickness)">
            <summary>
            Returns a rectangle that is shrunk by the specified thickness, in all directions.
            </summary>
            <param name="t">The thickness to apply to the rectangle.</param>
            <returns>The deflated <see cref="T:Zebble.zebbleOxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyRect.Offset(System.Double,System.Double)">
            <summary>
            Returns a rectangle that is moved by the specified horizontal and vertical amounts.
            </summary>
            <param name="offsetX">The amount to move the rectangle horizontally.</param>
            <param name="offsetY">The amount to move the rectangle vertically.</param>
            <returns>The moved <see cref="T:Zebble.zebbleOxyPlot.OxyRect" />.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxySize">
            <summary>
            Describes the size of an object.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxySize.Empty">
            <summary>
            Empty Size.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxySize.height">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxySize.width">
            <summary>
            The width
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxySize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxySize" /> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxySize.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxySize.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxySize.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxySize.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxySize.Equals(Zebble.zebbleOxyPlot.OxySize)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxySize" /> object have the same value.
            </summary>
            <param name="other">The size to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.OxyThickness">
            <summary>
            Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double" /> values describe the left, top, right, and bottom sides of the rectangle, respectively.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyThickness.bottom">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyThickness.left">
            <summary>
            The left.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyThickness.right">
            <summary>
            The right.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.OxyThickness.top">
            <summary>
            The top.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyThickness.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyThickness" /> struct.
            </summary>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyThickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.OxyThickness" /> struct.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Bottom">
            <summary>
            Gets the bottom thickness.
            </summary>
            <value>The bottom thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Left">
            <summary>
            Gets the left thickness.
            </summary>
            <value>The left thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Right">
            <summary>
            Gets the right thickness.
            </summary>
            <value>The right thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Top">
            <summary>
            Gets the top thickness.
            </summary>
            <value>The top thickness.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.OxyThickness.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyThickness.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyThickness.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.OxyThickness.Equals(Zebble.zebbleOxyPlot.OxyThickness)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxyThickness" /> object have the same value.
            </summary>
            <param name="other">The thickness to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.IRenderContext">
            <summary>
            Specifies functionality to render 2D graphics.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.IRenderContext.RendersToScreen">
            <summary>
            Gets a value indicating whether the context renders to screen.
            </summary>
            <value><c>true</c> if the context renders to screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawEllipse(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="extents">The rectangle defining the extents of the ellipse.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the extents will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the extents will not be stroked.</param>
            <param name="thickness">The thickness (in device independent units, 1/96 inch).</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawEllipses(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a collection of ellipses, where all have the same stroke and fill.
            </summary>
            <param name="extents">The rectangles defining the extents of the ellipses.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the ellipses will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the ellipses will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <remarks>
            This should have better performance than calling <see cref="M:Zebble.zebbleOxyPlot.IRenderContext.DrawEllipse(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)" /> multiple times.
            </remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawLine(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a polyline.
            </summary>
            <param name="points">The points defining the polyline. The polyline is drawn from point 0, to point 1, to point 2 and so on.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch). Use <c>null</c> to get a solid line.</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">if set to <c>true</c> the shape will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawLineSegments(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws line segments.
            </summary>
            <param name="points">The points defining the line segments. Lines are drawn from point 0 to 1, point 2 to 3 and so on.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">if set to <c>true</c> the shape will be aliased.</param>
            <remarks>
            This should have better performance than calling <see cref="M:Zebble.zebbleOxyPlot.IRenderContext.DrawLine(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)" /> for each segment.
            </remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawPolygon(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a polygon.
            </summary>
            <param name="points">The points defining the polygon.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the polygon will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the polygon will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">If set to <c>true</c> the polygon will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawPolygons(System.Collections.Generic.IList{System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint}},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a collection of polygons, where all polygons have the same stroke and fill.
            </summary>
            <param name="polygons">The polygons to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the polygons will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the polygons will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">if set to <c>true</c> the shape will be aliased.</param>
            <remarks>
            This performs better than calling <see cref="M:Zebble.zebbleOxyPlot.IRenderContext.DrawPolygon(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)" /> multiple times.
            </remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawRectangle(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rectangle">The rectangle to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the rectangle will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the rectangle will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawRectangles(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a collection of extents, where all have the same stroke and fill.
            </summary>
            <param name="rectangles">The extents to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the extents will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the extents will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <remarks>
            This should have better performance than calling <see cref="M:Zebble.zebbleOxyPlot.IRenderContext.DrawRectangle(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)" /> multiple times.
            </remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawText(Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize})">
            <summary>
            Draws text.
            </summary>
            <param name="pp">The position.</param>
            <param name="text">The text.</param>
            <param name="fill">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotation">The rotation angle.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text (in device independent units, 1/96 inch). If set to <c>null</c>, the text will not be clipped.</param>
            <remarks>
            Multi-line text is not supported.
            </remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the size of the specified text.
            </summary>
            <param name="text">The text to measure.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The size of the text (in device independent units, 1/96 inch).</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tool tip, or <c>null</c> if no tool tip should be shown.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>This method is called at the end of each rendering.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.DrawImage(Zebble.zebbleOxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws a portion of the specified <see cref="T:Zebble.zebbleOxyPlot.OxyImage" />.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.SetClip(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Sets the clipping rectangle.
            </summary>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <returns>
              <c>true</c> if the clipping rectangle was set.
            </returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.IRenderContext.ResetClip">
            <summary>
            Resets the clipping rectangle.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.RenderContextBase">
            <summary>
            Provides an abstract base class for rendering contexts.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.RenderContextBase" /> class.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.RenderContextBase.RendersToScreen">
            <summary>
            Gets or sets a value indicating whether the context renders to screen.
            </summary>
            <value><c>true</c> if the context renders to screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawEllipse(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawEllipses(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws the collection of ellipses, where all have the same stroke and fill.
            This performs better than calling DrawEllipse multiple times.
            </summary>
            <param name="rectangles">The rectangles.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawLine(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a polyline.
            </summary>
            <param name="points">The points.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">if set to <c>true</c> the shape will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawLineSegments(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws multiple line segments defined by points (0,1) (2,3) (4,5) etc.
            This should have better performance than calling DrawLine for each segment.
            </summary>
            <param name="points">The points.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">If set to <c>true</c> the shape will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawPolygon(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a polygon. The polygon can have stroke and/or fill.
            </summary>
            <param name="points">The points.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">If set to <c>true</c> the shape will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawPolygons(System.Collections.Generic.IList{System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint}},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws a collection of polygons, where all polygons have the same stroke and fill.
            This performs better than calling DrawPolygon multiple times.
            </summary>
            <param name="polygons">The polygons.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
            <param name="aliased">if set to <c>true</c> the shape will be aliased.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawRectangle(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawRectangles(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a collection of rectangles, where all have the same stroke and fill.
            This performs better than calling DrawRectangle multiple times.
            </summary>
            <param name="rectangles">The rectangles.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawText(Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize})">
            <summary>
            Draws the text.
            </summary>
            <param name="p">The position of the text.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The text size.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tooltip.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>This method is called at the end of each rendering.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.DrawImage(Zebble.zebbleOxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:Zebble.zebbleOxyPlot.OxyImage" /> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.SetClip(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Sets the clip rectangle.
            </summary>
            <param name="rect">The clip rectangle.</param>
            <returns>True if the clip rectangle was set.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.ResetClip">
            <summary>
            Resets the clip rectangle.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.CreateEllipse(Zebble.zebbleOxyPlot.OxyRect,System.Int32)">
            <summary>
            Creates an ellipse polygon.
            </summary>
            <param name="rect">The bounding rectangle.</param>
            <param name="n">The number of points.</param>
            <returns>The points defining the ellipse.</returns>
            <remarks>Note that this is very slow, not optimized in any way.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.RenderContextBase.CreateRectangle(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Creates a rectangle polygon.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The points defining the rectangle.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ScreenPoint">
            <summary>
            Represents a point defined in screen space.
            </summary>
            <remarks>The rendering methods transforms <see cref="T:Zebble.zebbleOxyPlot.DataPoint" />s to <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />s.</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ScreenPoint.Undefined">
            <summary>
            The undefined point.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ScreenPoint.x">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ScreenPoint.y">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" /> struct.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenPoint.X">
            <summary>
            Gets the x-coordinate.
            </summary>
            <value>The x-coordinate.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenPoint.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
            <value>The y-coordinate.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.IsUndefined(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is undefined.
            </summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if the specified point is undefined; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.op_Addition(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Translates a <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" /> by a <see cref="T:Zebble.zebbleOxyPlot.ScreenVector" />.
            </summary>
            <param name="p1">The point.</param>
            <param name="p2">The vector.</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.op_Subtraction(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Subtracts a <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" /> from a <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />
            and returns the result as a <see cref="T:Zebble.zebbleOxyPlot.ScreenVector" />.
            </summary>
            <param name="p1">The point on which to perform the subtraction.</param>
            <param name="p2">The point to subtract from p1.</param>
            <returns>A <see cref="T:Zebble.zebbleOxyPlot.ScreenVector" /> structure that represents the difference between p1 and p2.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.op_Subtraction(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Subtracts a <see cref="T:Zebble.zebbleOxyPlot.ScreenVector" /> from a <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />
            and returns the result as a <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" />.
            </summary>
            <param name="point">The point on which to perform the subtraction.</param>
            <param name="vector">The vector to subtract from p1.</param>
            <returns>A <see cref="T:Zebble.zebbleOxyPlot.ScreenPoint" /> that represents point translated by the negative vector.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.DistanceTo(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Gets the distance to the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.DistanceToSquared(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Gets the squared distance to the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns>The squared distance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenPoint.Equals(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ScreenPoint" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.ScreenVector">
            <summary>
            Represents a vector defined in screen space.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ScreenVector.xx">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.ScreenVector.yy">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.ScreenVector" /> structure.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenVector.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenVector.LengthSquared">
            <summary>
            Gets the length squared.
            </summary>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenVector.X">
            <summary>
            Gets the x-coordinate.
            </summary>
            <value>The x-coordinate.</value>
        </member>
        <member name="P:Zebble.zebbleOxyPlot.ScreenVector.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
            <value>The y-coordinate.</value>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.op_Multiply(Zebble.zebbleOxyPlot.ScreenVector,System.Double)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="v">The vector.</param>
            <param name="d">The multiplication factor.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.op_Addition(Zebble.zebbleOxyPlot.ScreenVector,Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Adds a vector to another vector.
            </summary>
            <param name="v">The vector to add to.</param>
            <param name="d">The vector to be added.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.op_Subtraction(Zebble.zebbleOxyPlot.ScreenVector,Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Subtracts one specified vector from another.
            </summary>
            <param name="v">The vector to subtract from.</param>
            <param name="d">The vector to be subtracted.</param>
            <returns>The result of operation.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.op_UnaryNegation(Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Negates the specified vector.
            </summary>
            <param name="v">The vector to negate.</param>
            <returns>The result of operation.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.ScreenVector.Equals(Zebble.zebbleOxyPlot.ScreenVector)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ScreenVector" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.CohenSutherlandClipping">
            <summary>
            Provides a line clipping algorithm.
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland</remarks>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.Bottom">
            <summary>
            The bottom code.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.Inside">
            <summary>
            The inside code.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.Left">
            <summary>
            The left code.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.Right">
            <summary>
            The right code.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.Top">
            <summary>
            The top code.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.xmax">
            <summary>
            The x maximum.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.xmin">
            <summary>
            The x minimum.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.ymax">
            <summary>
            The y maximum.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.CohenSutherlandClipping.ymin">
            <summary>
            The y minimum.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CohenSutherlandClipping.#ctor(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Initializes a new instance of the <see cref="T:Zebble.zebbleOxyPlot.CohenSutherlandClipping" /> class.
            </summary>
            <param name="rect">The clipping rectangle.</param>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CohenSutherlandClipping.ClipLine(Zebble.zebbleOxyPlot.ScreenPoint@,Zebble.zebbleOxyPlot.ScreenPoint@)">
            <summary>
            Cohen–Sutherland clipping algorithm clips a line from
            P0 = (x0, y0) to P1 = (x1, y1) against a rectangle with
            diagonal from <code>(xmin, ymin)</code> to <code>(xmax, ymax)</code>.
            </summary>
            <param name="p0">The point P0.</param>
            <param name="p1">The point P1.</param>
            <returns><c>true</c> if the line is inside</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.CohenSutherlandClipping.IsInside(Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is inside the rectangle.
            </summary>
            <param name="ss">The point.</param>
            <returns><c>true</c> if the specified point is inside; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping">
            <summary>
            Provides polygon clipping by the Sutherland-Hodgman algorithm.
            </summary>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge">
            <summary>
            The rectangle edge.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge.Left">
            <summary>
            The left.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge.Right">
            <summary>
            The right.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge.Top">
            <summary>
            The top.
            </summary>
        </member>
        <member name="F:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge.Bottom">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.ClipPolygon(Zebble.zebbleOxyPlot.OxyRect,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint})">
            <summary>
            The Sutherland-Hodgman polygon clipping algorithm.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="vv">The polygon points.</param>
            <returns>The clipped points.</returns>
            <remarks>See <a href="http://ezekiel.vancouver.wsu.edu/~cs442/lectures/clip/clip/index.html">link</a>.</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.ClipOneAxis(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint})">
            <summary>
            Clips to one axis.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="edge">The edge.</param>
            <param name="vv">The points of the polygon.</param>
            <returns>The clipped points.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.IsInside(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is inside the edge/bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="edge">The edge to test.</param>
            <param name="pp">The point.</param>
            <returns><c>true</c> if the specified point is inside; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.LineIntercept(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.SutherlandHodgmanClipping.RectangleEdge,Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Fines the edge interception.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="edge">The edge.</param>
            <param name="aa">The first point.</param>
            <param name="bb">The second point.</param>
            <returns>The interception.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.FractionHelper">
            <summary>
            Provides functionality to generate fraction strings from double values.
            </summary>
            <remarks>Examples: "3/4", "PI/2"</remarks>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.FractionHelper.ConvertToFractionString(System.Double,System.Double,System.String,System.Double,System.IFormatProvider,System.String)">
            <summary>
            Converts a double to a fraction string.
            </summary>
            <param name="value">The value.</param>
            <param name="unit">The unit.</param>
            <param name="unitSymbol">The unit symbol.</param>
            <param name="eps">The tolerance.</param>
            <param name="formatProvider">The format Provider.</param>
            <param name="formatString">The format string.</param>
            <returns>The convert to fraction string.</returns>
        </member>
        <member name="T:Zebble.zebbleOxyPlot.HashCodeBuilder">
            <summary>
            Provides functionality to calculate hash codes.
            </summary>
        </member>
        <member name="M:Zebble.zebbleOxyPlot.HashCodeBuilder.GetHashCode(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Calculates a hash code for the specified sequence of items.
            </summary>
            <param name="items">A sequence of items.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Zebble.CodeGeneratorStringExtensions">
            <summary>
            Provides extension methods for code generation.
            </summary>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.String)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.Boolean)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The value.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.Int32)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.Enum)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.Double)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:Zebble.CodeGeneratorStringExtensions.ToCode(System.Object)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="T:Zebble.IView">
            <summary>
            Specifies common functionality for the views.
            </summary>
        </member>
        <member name="P:Zebble.IView.ActualModel">
            <summary>
            Gets the actual model in the view.
            </summary>
            <value>
            The actual <see cref="T:Zebble.zebbleOxyPlot.Model" />.
            </value>
        </member>
        <member name="P:Zebble.IView.ClientArea">
            <summary>
            Gets the coordinates of the client area of the view.
            </summary>
            <value>
            The client area rectangle.
            </value>
        </member>
        <member name="M:Zebble.IView.HideZoomRectangle">
            <summary>
            Hides the zoom rectangle.
            </summary>
        </member>
        <member name="M:Zebble.IView.ShowZoomRectangle(Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Shows the zoom rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="T:Zebble.IPlotView">
            <summary>
            Specifies functionality for the plot views.
            </summary>
        </member>
        <member name="P:Zebble.IPlotView.ActualModel">
            <summary>
            Gets the actual <see cref="T:Zebble.zebbleOxyPlot.PlotModel" /> of the control.
            </summary>
        </member>
        <member name="M:Zebble.IPlotView.HideTracker">
            <summary>
            Hides the tracker.
            </summary>
        </member>
        <member name="M:Zebble.IPlotView.InvalidatePlot(System.Boolean)">
            <summary>
            Invalidates the plot (not blocking the UI thread)
            </summary>
            <param name="updateData">if set to <c>true</c>, all data bindings will be updated.</param>
        </member>
        <member name="M:Zebble.IPlotView.SetClipboardText(System.String)">
            <summary>
            Stores text on the clipboard.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:Zebble.LineStyleHelper">
            <summary>
            Provides functionality to convert from <see cref="T:Zebble.zebbleOxyPlot.LineStyle" /> to a stroke dash array.
            </summary>
        </member>
        <member name="M:Zebble.LineStyleHelper.GetDashArray(Zebble.zebbleOxyPlot.LineStyle)">
            <summary>
            Gets the stroke dash array for a given <see cref="T:Zebble.zebbleOxyPlot.LineStyle" />.
            </summary>
            <param name="style">The line style.</param>
            <returns>A dash array.</returns>
        </member>
        <member name="T:Zebble.OxyColorExtensions">
            <summary>
            Provides extension methods for <see cref="T:Zebble.zebbleOxyPlot.OxyColor" />.
            </summary>
            <remarks>These are pure methods. They could also be placed in the <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> type with a <see cref="T:System.Diagnostics.Contracts.PureAttribute" />.</remarks>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ChangeIntensity(Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Changes the intensity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns>A color with the new intensity.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ChangeSaturation(Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Changes the intensity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns>A color with the new intensity.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.Complementary(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Calculates the complementary color.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The complementary color.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ToHsv(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Converts from a <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> to HSV values (double)
            </summary>
            <param name="color">The color.</param>
            <returns>Array of [Hue,Saturation,Value] in the range [0,1]</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ToUint(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Converts to an unsigned integer.
            </summary>
            <param name="color">The color.</param>
            <returns>The color as an unsigned integer.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ToByteString(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Converts an <see cref="T:Zebble.zebbleOxyPlot.OxyColor" /> to a string containing the ARGB byte values.
            </summary>
            <param name="color">The color.</param>
            <returns>A string that contains byte values of the alpha, red, green and blue components separated by comma.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.ToCode(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <param name="color">The color.</param>
            <returns>The code.</returns>
        </member>
        <member name="M:Zebble.OxyColorExtensions.GetColorName(Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Gets the name of the color if it is defined in the <see cref="T:Zebble.zebbleOxyPlot.OxyColors" /> class.
            </summary>
            <param name="color">The color.</param>
            <returns>The color name or <c>null</c> if the color is not found.</returns>
        </member>
        <member name="T:Zebble.OxySizeExtensions">
            <summary>
            Provides extension methods for <see cref="T:Zebble.zebbleOxyPlot.OxySize"/>
            </summary>
            <remarks>These are pure methods. They could also be placed in the <see cref="T:Zebble.zebbleOxyPlot.OxySize" /> type with a <see cref="T:System.Diagnostics.Contracts.PureAttribute" />.</remarks>
        </member>
        <member name="M:Zebble.OxySizeExtensions.GetBounds(Zebble.zebbleOxyPlot.OxySize,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment)">
            <summary>
            Calculates the bounds with respect to rotation angle and horizontal/vertical alignment.
            </summary>
            <param name="bounds">The size of the object to calculate bounds for.</param>
            <param name="angle">The rotation angle (degrees).</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <returns>A minimum bounding rectangle.</returns>
        </member>
        <member name="M:Zebble.OxySizeExtensions.GetPolygon(Zebble.zebbleOxyPlot.OxySize,Zebble.zebbleOxyPlot.ScreenPoint,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment)">
            <summary>
            Gets the polygon outline of the specified rotated and aligned box.
            </summary>
            <param name="size">The size of the  box.</param>
            <param name="origin">The origin of the box.</param>
            <param name="angle">The rotation angle of the box.</param>
            <param name="horizontalAlignment">The horizontal alignment of the box.</param>
            <param name="verticalAlignment">The vertical alignment of the box.</param>
            <returns>A sequence of points defining the polygon outline of the box.</returns>
        </member>
        <member name="T:Zebble.MathRenderingExtensions">
            <summary>
            Provides functionality to render mathematical expressions.
            </summary>
        </member>
        <member name="M:Zebble.MathRenderingExtensions.#cctor">
            <summary>
            Initializes static members of the <see cref = "T:Zebble.MathRenderingExtensions" /> class.
            </summary>
        </member>
        <member name="P:Zebble.MathRenderingExtensions.SubAlignment">
            <summary>
            Gets or sets the subscript alignment.
            </summary>
        </member>
        <member name="P:Zebble.MathRenderingExtensions.SubSize">
            <summary>
            Gets or sets the subscript size.
            </summary>
        </member>
        <member name="P:Zebble.MathRenderingExtensions.SuperAlignment">
            <summary>
            Gets or sets the superscript alignment.
            </summary>
        </member>
        <member name="P:Zebble.MathRenderingExtensions.SuperSize">
            <summary>
            Gets or sets the superscript size.
            </summary>
        </member>
        <member name="M:Zebble.MathRenderingExtensions.DrawMathText(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize},System.Boolean)">
            <summary>
            Draws or measures text containing sub- and superscript.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pt">The point.</param>
            <param name="text">The text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
            <param name="measure">Measure the size of the text if set to <c>true</c>.</param>
            <returns>The size of the text.</returns>
            <example>Subscript: H_{2}O
            Superscript: E=mc^{2}
            Both: A^{2}_{i,j}</example>
        </member>
        <member name="M:Zebble.MathRenderingExtensions.DrawMathText(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize})">
            <summary>
            Draws text containing sub- and superscript.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pt">The point.</param>
            <param name="text">The text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
            <example>Subscript: H_{2}O
            Superscript: E=mc^{2}
            Both: A^{2}_{i,j}</example>
        </member>
        <member name="M:Zebble.MathRenderingExtensions.MeasureMathText(Zebble.zebbleOxyPlot.IRenderContext,System.String,System.String,System.Double,System.Double)">
            <summary>
            The measure math text.
            </summary>
            <param name="rc">The render context.</param>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="M:Zebble.MathRenderingExtensions.InternalDrawMathText(Zebble.zebbleOxyPlot.IRenderContext,System.Double,System.Double,System.Double,System.Double,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Draws text with sub- and superscript items.
            </summary>
            <param name="rc">The render context.</param>
            <param name="xx">The x.</param>
            <param name="yy">The y.</param>
            <param name="dx">The x offset (in rotated coordinates).</param>
            <param name="dy">The y offset (in rotated coordinates).</param>
            <param name="ss">The s.</param>
            <param name="textColor">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="measureOnly">Only measure if set to <c>true</c>.</param>
            <param name="angle">The angle of the text (degrees).</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="T:Zebble.RenderingExtensions">
            <summary>
            Provides extension methods for <see cref="T:Zebble.zebbleOxyPlot.IRenderContext" />.
            </summary>
        </member>
        <member name="F:Zebble.RenderingExtensions.M1">
            <summary>
            The vertical distance to the bottom points of the triangles.
            </summary>
        </member>
        <member name="F:Zebble.RenderingExtensions.M2">
            <summary>
            The vertical distance to the top points of the triangles .
            </summary>
        </member>
        <member name="F:Zebble.RenderingExtensions.M3">
            <summary>
            The horizontal/vertical distance to the end points of the stars.
            </summary>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedLine(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},System.Double,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean,System.Collections.Generic.List{Zebble.zebbleOxyPlot.ScreenPoint},System.Action{System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint}})">
            <summary>
            Draws a clipped polyline through the specified points.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="points">The points.</param>
            <param name="minDistSquared">The minimum line segment length (squared).</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">Set to <c>true</c> to draw as an aliased line.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="pointsRendered">The points rendered callback.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedLineSegments(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Double[],Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws clipped line segments.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="points">The points defining the line segments. Lines are drawn from point 0 to 1, point 2 to 3 and so on.</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">Set to <c>true</c> to draw as an aliased line.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawImage(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified image.
            </summary>
            <param name="rc">The render context.</param>
            <param name="image">The image.</param>
            <param name="x">The destination X position.</param>
            <param name="y">The destination Y position.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate the image if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedImage(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws a clipped image.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="source">The source.</param>
            <param name="xx">The destination X position.</param>
            <param name="yy">The destination Y position.</param>
            <param name="ww">The width.</param>
            <param name="hh">The height.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedPolygon(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},System.Double,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,Zebble.zebbleOxyPlot.LineStyle,Zebble.zebbleOxyPlot.LineJoin,System.Boolean)">
            <summary>
            Draws the polygon within the specified clipping rectangle.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="points">The points.</param>
            <param name="minDistSquared">The squared minimum distance between points.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
            <param name="aliased">The aliased.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedRectangle(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws the clipped rectangle.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="rect">The rectangle to draw.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedRectangleAsPolygon(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws the clipped rectangle as a polygon.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="rect">The rectangle to draw.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedEllipse(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Int32)">
            <summary>
            Draws a clipped ellipse.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="n">The number of points around the ellipse.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedText(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize})">
            <summary>
            Draws the clipped text.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="p">The position.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="horizontalAlignment">The horizontal align.</param>
            <param name="verticalAlignment">The vertical align.</param>
            <param name="maxSize">Size of the max.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawClippedMathText(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,Zebble.HorizontalAlignment,Zebble.VerticalAlignment,System.Nullable{Zebble.zebbleOxyPlot.OxySize})">
            <summary>
            Draws clipped math text.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="p">The position.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="horizontalAlignment">The horizontal align.</param>
            <param name="verticalAlignment">The vertical align.</param>
            <param name="maxSize">Size of the max.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawMultilineText(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.ScreenPoint,System.String,Zebble.zebbleOxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Draws multi-line text at the specified point.
            </summary>
            <param name="rc">The render context.</param>
            <param name="point">The point.</param>
            <param name="text">The text.</param>
            <param name="color">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="dy">The line spacing.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawLine(Zebble.zebbleOxyPlot.IRenderContext,System.Double,System.Double,System.Double,System.Double,Zebble.zebbleOxyPlot.OxyPen,System.Boolean)">
            <summary>
            Draws a line specified by coordinates.
            </summary>
            <param name="rc">The render context.</param>
            <param name="x0">The x0.</param>
            <param name="y0">The y0.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="pen">The pen.</param>
            <param name="aliased">Aliased line if set to <c>true</c>.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawLineSegments(Zebble.zebbleOxyPlot.IRenderContext,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyPen,System.Boolean)">
            <summary>
            Draws the line segments.
            </summary>
            <param name="rc">The render context.</param>
            <param name="points">The points.</param>
            <param name="pen">The pen.</param>
            <param name="aliased">if set to <c>true</c> [aliased].</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawMarker(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.MarkerType,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},System.Double,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Renders the marker.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="p">The center point of the marker.</param>
            <param name="type">The marker type.</param>
            <param name="outline">The outline.</param>
            <param name="size">The size of the marker.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawMarkers(Zebble.zebbleOxyPlot.IRenderContext,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.MarkerType,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},System.Double,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Int32,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Draws a list of markers.
            </summary>
            <param name="rc">The render context.</param>
            <param name="markerPoints">The marker points.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="markerType">Type of the marker.</param>
            <param name="markerOutline">The marker outline.</param>
            <param name="markerSize">Size of the marker.</param>
            <param name="markerFill">The marker fill.</param>
            <param name="markerStroke">The marker stroke.</param>
            <param name="markerStrokeThickness">The marker stroke thickness.</param>
            <param name="resolution">The resolution.</param>
            <param name="binOffset">The bin Offset.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawMarkers(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},Zebble.zebbleOxyPlot.MarkerType,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint},System.Collections.Generic.IList{System.Double},Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double,System.Int32,Zebble.zebbleOxyPlot.ScreenPoint)">
            <summary>
            Draws a list of markers.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <param name="markerPoints">The marker points.</param>
            <param name="markerType">Type of the marker.</param>
            <param name="markerOutline">The marker outline.</param>
            <param name="markerSize">Size of the markers.</param>
            <param name="markerFill">The marker fill.</param>
            <param name="markerStroke">The marker stroke.</param>
            <param name="markerStrokeThickness">The marker stroke thickness.</param>
            <param name="resolution">The resolution.</param>
            <param name="binOffset">The bin Offset.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawRectangleAsPolygon(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws the rectangle as an aliased polygon.
            (makes sure pixel alignment is the same as for lines)
            </summary>
            <param name="rc">The render context.</param>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawCircle(Zebble.zebbleOxyPlot.IRenderContext,System.Double,System.Double,System.Double,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="xx">The center x-coordinate.</param>
            <param name="y">The center y-coordinate.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawCircle(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.ScreenPoint,System.Double,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,System.Double)">
            <summary>
            Draws a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="center">The center.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.FillCircle(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.ScreenPoint,System.Double,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Fills a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="center">The center.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.FillRectangle(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor)">
            <summary>
            Fills a rectangle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="fill">The fill color.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.DrawRectangleAsPolygon(Zebble.zebbleOxyPlot.IRenderContext,Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyColor,Zebble.zebbleOxyPlot.OxyThickness)">
            <summary>
            Draws the rectangle as an aliased polygon. Makes sure pixel alignment is the same as for aliased lines.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.MeasureText(Zebble.zebbleOxyPlot.IRenderContext,System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Measures the size of the specified text.
            </summary>
            <param name="rc">The render context.</param>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle of measured text (degrees).</param>
            <returns>The size of the text (in device independent units, 1/96 inch).</returns>
        </member>
        <member name="M:Zebble.RenderingExtensions.AddMarkerGeometry(Zebble.zebbleOxyPlot.ScreenPoint,Zebble.zebbleOxyPlot.MarkerType,System.Collections.Generic.IEnumerable{Zebble.zebbleOxyPlot.ScreenPoint},System.Double,System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},System.Collections.Generic.IList{Zebble.zebbleOxyPlot.OxyRect},System.Collections.Generic.IList{System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint}},System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint})">
            <summary>
            Adds a marker geometry to the specified collections.
            </summary>
            <param name="pp">The position of the marker.</param>
            <param name="type">The marker type.</param>
            <param name="outline">The custom outline, if <paramref name="type" /> is <see cref="F:Zebble.zebbleOxyPlot.MarkerType.Custom" />.</param>
            <param name="size">The size of the marker.</param>
            <param name="ellipses">The output ellipse collection.</param>
            <param name="rects">The output rectangle collection.</param>
            <param name="polygons">The output polygon collection.</param>
            <param name="lines">The output line collection.</param>
        </member>
        <member name="M:Zebble.RenderingExtensions.ClipRect(Zebble.zebbleOxyPlot.OxyRect,Zebble.zebbleOxyPlot.OxyRect)">
            <summary>
            Calculates the clipped version of a rectangle.
            </summary>
            <param name="rect">The rectangle to clip.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <returns>The clipped rectangle, or <c>null</c> if the rectangle is outside the clipping area.</returns>
        </member>
        <member name="M:Zebble.RenderingExtensions.EnsureNonEmptyLineIsVisible(System.Collections.Generic.IList{Zebble.zebbleOxyPlot.ScreenPoint})">
            <summary>
            Makes sure that a non empty line is visible.
            </summary>
            <param name="pts">The points (screen coordinates).</param>
            <remarks>If the line contains one point, another point is added.
            If the line contains two points at the same position, the points are moved 2 pixels apart.</remarks>
        </member>
        <member name="M:Zebble.RenderingExtensions.MeasureRotatedRectangleBound(Zebble.zebbleOxyPlot.OxySize,System.Double)">
            <summary>
            Calculates the bounds with respect to rotation angle and horizontal/vertical alignment.
            </summary>
            <param name="bounds">The size of the object to calculate bounds for.</param>
            <param name="angle">The rotation angle (degrees).</param>
            <returns>A minimum bounding rectangle.</returns>
        </member>
        <member name="T:Zebble.BinaryReaderExtensions">
            <summary>
            Provides extension methods to the <see cref="T:System.IO.BinaryReader" />.
            </summary>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadString(System.IO.BinaryReader,System.Int32,System.Text.Encoding)">
            <summary>
            Reads a string of the specified length (in bytes).
            </summary>
            <param name="r">The reader.</param>
            <param name="length">The length.</param>
            <param name="encoding">The encoding.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadUInt32(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an unsigned 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadInt32(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads a signed 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The signed integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadUInt16(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an unsigned 16-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadDouble(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an 64-bit floating point value.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The floating point number.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadUInt32Array(System.IO.BinaryReader,System.Int32,System.Boolean)">
            <summary>
            Reads an array of unsigned 32-bit integers.
            </summary>
            <param name="r">The reader.</param>
            <param name="count">The number of values to read.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer array.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadUInt16Array(System.IO.BinaryReader,System.Int32,System.Boolean)">
            <summary>
            Reads an array of unsigned 16-bit integers.
            </summary>
            <param name="r">The reader.</param>
            <param name="count">The number of values to read.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer array.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadBigEndianUInt32(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) unsigned 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadBigEndianInt32(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) signed 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The signed integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadBigEndianUInt16(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) unsigned 16-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:Zebble.BinaryReaderExtensions.ReadBigEndianDouble(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) 64-bit floating point number.
            </summary>
            <param name="r">The reader.</param>
            <returns>A <see cref="T:System.Double" />.</returns>
        </member>
    </members>
</doc>
